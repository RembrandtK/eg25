"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@worldcoin";
exports.ids = ["vendor-chunks/@worldcoin"];
exports.modules = {

/***/ "(rsc)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js":
/*!********************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAction: () => (/* binding */ encodeAction),\n/* harmony export */   generateSignal: () => (/* binding */ generateSignal),\n/* harmony export */   hashToField: () => (/* binding */ hashToField),\n/* harmony export */   packAndEncode: () => (/* binding */ packAndEncode),\n/* harmony export */   solidityEncode: () => (/* binding */ solidityEncode)\n/* harmony export */ });\n/* harmony import */ var buffer_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer/index.js */ \"(rsc)/./node_modules/buffer/index.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ox */ \"(rsc)/./node_modules/ox/_esm/core/Bytes.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ox */ \"(rsc)/./node_modules/ox/_esm/core/Hex.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ox */ \"(rsc)/./node_modules/ox/_esm/core/AbiParameters.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ox */ \"(rsc)/./node_modules/ox/_esm/core/Hash.js\");\n// src/lib/hashing.ts\n\n\nfunction hashToField(input) {\n  if (ox__WEBPACK_IMPORTED_MODULE_1__.validate(input) || ox__WEBPACK_IMPORTED_MODULE_2__.validate(input)) return hashEncodedBytes(input);\n  return hashString(input);\n}\nfunction packAndEncode(input) {\n  const [types, values] = input.reduce(\n    ([types2, values2], [type, value]) => {\n      types2.push(type);\n      values2.push(value);\n      return [types2, values2];\n    },\n    [[], []]\n  );\n  return hashEncodedBytes(ox__WEBPACK_IMPORTED_MODULE_3__.encodePacked(types, values));\n}\nfunction hashString(input) {\n  const bytesInput = buffer_index_js__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(input);\n  return hashEncodedBytes(bytesInput);\n}\nfunction hashEncodedBytes(input) {\n  const hash = BigInt(ox__WEBPACK_IMPORTED_MODULE_4__.keccak256(input, { as: \"Hex\" })) >> 8n;\n  const rawDigest = hash.toString(16);\n  return { hash, digest: `0x${rawDigest.padStart(64, \"0\")}` };\n}\nvar solidityEncode = (types, values) => {\n  if (types.length !== values.length) {\n    throw new Error(\"Types and values arrays must have the same length.\");\n  }\n  return { types, values };\n};\nvar generateSignal = (signal) => {\n  if (!signal || typeof signal === \"string\") return hashToField(signal ?? \"\");\n  return packAndEncode(signal.types.map((type, index) => [type, signal.values[index]]));\n};\nvar encodeAction = (action) => {\n  if (!action) return \"\";\n  if (typeof action === \"string\") return action;\n  return action.types.map((type, index) => `${type}(${action.values[index]})`).join(\",\");\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2NodW5rLUhaMlNRQTVWLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUN5QztBQUNZO0FBQ3JEO0FBQ0EsTUFBTSx3Q0FBYyxXQUFXLHdDQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDBCQUEwQiw0Q0FBMEI7QUFDcEQ7QUFDQTtBQUNBLHFCQUFxQixtREFBTTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUNBQWMsVUFBVSxXQUFXO0FBQ3pEO0FBQ0EsV0FBVyxtQkFBbUIsNEJBQTRCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxLQUFLLEdBQUcscUJBQXFCO0FBQzNFOztBQVFFIiwic291cmNlcyI6WyIvVXNlcnMvbWF0ZW9zYXV0b24vTWF0dGVvLVByb2plY3QvbXktYXBwL25vZGVfbW9kdWxlcy9Ad29ybGRjb2luL2lka2l0LWNvcmUvYnVpbGQvY2h1bmstSFoyU1FBNVYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9oYXNoaW5nLnRzXG5pbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBBYmlQYXJhbWV0ZXJzLCBCeXRlcywgSGV4LCBIYXNoIH0gZnJvbSBcIm94XCI7XG5mdW5jdGlvbiBoYXNoVG9GaWVsZChpbnB1dCkge1xuICBpZiAoQnl0ZXMudmFsaWRhdGUoaW5wdXQpIHx8IEhleC52YWxpZGF0ZShpbnB1dCkpIHJldHVybiBoYXNoRW5jb2RlZEJ5dGVzKGlucHV0KTtcbiAgcmV0dXJuIGhhc2hTdHJpbmcoaW5wdXQpO1xufVxuZnVuY3Rpb24gcGFja0FuZEVuY29kZShpbnB1dCkge1xuICBjb25zdCBbdHlwZXMsIHZhbHVlc10gPSBpbnB1dC5yZWR1Y2UoXG4gICAgKFt0eXBlczIsIHZhbHVlczJdLCBbdHlwZSwgdmFsdWVdKSA9PiB7XG4gICAgICB0eXBlczIucHVzaCh0eXBlKTtcbiAgICAgIHZhbHVlczIucHVzaCh2YWx1ZSk7XG4gICAgICByZXR1cm4gW3R5cGVzMiwgdmFsdWVzMl07XG4gICAgfSxcbiAgICBbW10sIFtdXVxuICApO1xuICByZXR1cm4gaGFzaEVuY29kZWRCeXRlcyhBYmlQYXJhbWV0ZXJzLmVuY29kZVBhY2tlZCh0eXBlcywgdmFsdWVzKSk7XG59XG5mdW5jdGlvbiBoYXNoU3RyaW5nKGlucHV0KSB7XG4gIGNvbnN0IGJ5dGVzSW5wdXQgPSBCdWZmZXIuZnJvbShpbnB1dCk7XG4gIHJldHVybiBoYXNoRW5jb2RlZEJ5dGVzKGJ5dGVzSW5wdXQpO1xufVxuZnVuY3Rpb24gaGFzaEVuY29kZWRCeXRlcyhpbnB1dCkge1xuICBjb25zdCBoYXNoID0gQmlnSW50KEhhc2gua2VjY2FrMjU2KGlucHV0LCB7IGFzOiBcIkhleFwiIH0pKSA+PiA4bjtcbiAgY29uc3QgcmF3RGlnZXN0ID0gaGFzaC50b1N0cmluZygxNik7XG4gIHJldHVybiB7IGhhc2gsIGRpZ2VzdDogYDB4JHtyYXdEaWdlc3QucGFkU3RhcnQoNjQsIFwiMFwiKX1gIH07XG59XG52YXIgc29saWRpdHlFbmNvZGUgPSAodHlwZXMsIHZhbHVlcykgPT4ge1xuICBpZiAodHlwZXMubGVuZ3RoICE9PSB2YWx1ZXMubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZXMgYW5kIHZhbHVlcyBhcnJheXMgbXVzdCBoYXZlIHRoZSBzYW1lIGxlbmd0aC5cIik7XG4gIH1cbiAgcmV0dXJuIHsgdHlwZXMsIHZhbHVlcyB9O1xufTtcbnZhciBnZW5lcmF0ZVNpZ25hbCA9IChzaWduYWwpID0+IHtcbiAgaWYgKCFzaWduYWwgfHwgdHlwZW9mIHNpZ25hbCA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGhhc2hUb0ZpZWxkKHNpZ25hbCA/PyBcIlwiKTtcbiAgcmV0dXJuIHBhY2tBbmRFbmNvZGUoc2lnbmFsLnR5cGVzLm1hcCgodHlwZSwgaW5kZXgpID0+IFt0eXBlLCBzaWduYWwudmFsdWVzW2luZGV4XV0pKTtcbn07XG52YXIgZW5jb2RlQWN0aW9uID0gKGFjdGlvbikgPT4ge1xuICBpZiAoIWFjdGlvbikgcmV0dXJuIFwiXCI7XG4gIGlmICh0eXBlb2YgYWN0aW9uID09PSBcInN0cmluZ1wiKSByZXR1cm4gYWN0aW9uO1xuICByZXR1cm4gYWN0aW9uLnR5cGVzLm1hcCgodHlwZSwgaW5kZXgpID0+IGAke3R5cGV9KCR7YWN0aW9uLnZhbHVlc1tpbmRleF19KWApLmpvaW4oXCIsXCIpO1xufTtcblxuZXhwb3J0IHtcbiAgaGFzaFRvRmllbGQsXG4gIHBhY2tBbmRFbmNvZGUsXG4gIHNvbGlkaXR5RW5jb2RlLFxuICBnZW5lcmF0ZVNpZ25hbCxcbiAgZW5jb2RlQWN0aW9uXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@worldcoin/idkit-core/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppErrorCodes: () => (/* binding */ AppErrorCodes),\n/* harmony export */   CredentialType: () => (/* binding */ CredentialType),\n/* harmony export */   DEFAULT_VERIFICATION_LEVEL: () => (/* binding */ DEFAULT_VERIFICATION_LEVEL),\n/* harmony export */   VerificationLevel: () => (/* binding */ VerificationLevel),\n/* harmony export */   VerificationState: () => (/* binding */ VerificationState),\n/* harmony export */   useWorldBridgeStore: () => (/* binding */ useWorldBridgeStore),\n/* harmony export */   verification_level_to_credential_types: () => (/* binding */ verification_level_to_credential_types)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-HZ2SQA5V.js */ \"(rsc)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand */ \"(rsc)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var buffer_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer/index.js */ \"(rsc)/./node_modules/buffer/index.js\");\n\n\n// src/types/bridge.ts\nvar AppErrorCodes = /* @__PURE__ */ ((AppErrorCodes2) => {\n  AppErrorCodes2[\"ConnectionFailed\"] = \"connection_failed\";\n  AppErrorCodes2[\"VerificationRejected\"] = \"verification_rejected\";\n  AppErrorCodes2[\"MaxVerificationsReached\"] = \"max_verifications_reached\";\n  AppErrorCodes2[\"CredentialUnavailable\"] = \"credential_unavailable\";\n  AppErrorCodes2[\"MalformedRequest\"] = \"malformed_request\";\n  AppErrorCodes2[\"InvalidNetwork\"] = \"invalid_network\";\n  AppErrorCodes2[\"InclusionProofFailed\"] = \"inclusion_proof_failed\";\n  AppErrorCodes2[\"InclusionProofPending\"] = \"inclusion_proof_pending\";\n  AppErrorCodes2[\"UnexpectedResponse\"] = \"unexpected_response\";\n  AppErrorCodes2[\"FailedByHostApp\"] = \"failed_by_host_app\";\n  AppErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return AppErrorCodes2;\n})(AppErrorCodes || {});\nvar VerificationState = /* @__PURE__ */ ((VerificationState2) => {\n  VerificationState2[\"PreparingClient\"] = \"loading_widget\";\n  VerificationState2[\"WaitingForConnection\"] = \"awaiting_connection\";\n  VerificationState2[\"WaitingForApp\"] = \"awaiting_app\";\n  VerificationState2[\"Confirmed\"] = \"confirmed\";\n  VerificationState2[\"Failed\"] = \"failed\";\n  return VerificationState2;\n})(VerificationState || {});\n\n// src/types/config.ts\nvar CredentialType = /* @__PURE__ */ ((CredentialType2) => {\n  CredentialType2[\"Orb\"] = \"orb\";\n  CredentialType2[\"SecureDocument\"] = \"secure_document\";\n  CredentialType2[\"Document\"] = \"document\";\n  CredentialType2[\"Device\"] = \"device\";\n  return CredentialType2;\n})(CredentialType || {});\nvar VerificationLevel = /* @__PURE__ */ ((VerificationLevel2) => {\n  VerificationLevel2[\"Orb\"] = \"orb\";\n  VerificationLevel2[\"SecureDocument\"] = \"secure_document\";\n  VerificationLevel2[\"Document\"] = \"document\";\n  VerificationLevel2[\"Device\"] = \"device\";\n  return VerificationLevel2;\n})(VerificationLevel || {});\n\n// src/bridge.ts\n\n\n// src/lib/validation.ts\nfunction validate_bridge_url(bridge_url, is_staging) {\n  try {\n    new URL(bridge_url);\n  } catch (e) {\n    return { valid: false, errors: [\"Failed to parse Bridge URL.\"] };\n  }\n  const test_url = new URL(bridge_url);\n  const errors = [];\n  if (is_staging && [\"localhost\", \"127.0.0.1\"].includes(test_url.hostname)) {\n    console.log(\"Using staging app_id with localhost bridge_url. Skipping validation.\");\n    return { valid: true };\n  }\n  if (test_url.protocol !== \"https:\") {\n    errors.push(\"Bridge URL must use HTTPS.\");\n  }\n  if (test_url.port) {\n    errors.push(\"Bridge URL must use the default port (443).\");\n  }\n  if (test_url.pathname !== \"/\") {\n    errors.push(\"Bridge URL must not have a path.\");\n  }\n  if (test_url.search) {\n    errors.push(\"Bridge URL must not have query parameters.\");\n  }\n  if (test_url.hash) {\n    errors.push(\"Bridge URL must not have a fragment.\");\n  }\n  if (!test_url.hostname.endsWith(\".worldcoin.org\") && !test_url.hostname.endsWith(\".toolsforhumanity.com\")) {\n    console.warn(\n      \"Bridge URL should be a subdomain of worldcoin.org or toolsforhumanity.com. The user's identity wallet may refuse to connect. This is a temporary measure and may be removed in the future.\"\n    );\n  }\n  if (errors.length) {\n    return { valid: false, errors };\n  }\n  return { valid: true };\n}\n\n// src/lib/utils.ts\n\nvar DEFAULT_VERIFICATION_LEVEL = \"orb\" /* Orb */;\nvar buffer_encode = (buffer) => {\n  return buffer_index_js__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(buffer).toString(\"base64\");\n};\nvar buffer_decode = (encoded) => {\n  return buffer_index_js__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(encoded, \"base64\");\n};\nvar verification_level_to_credential_types = (verification_level) => {\n  switch (verification_level) {\n    case \"device\" /* Device */:\n      return [\"orb\" /* Orb */, \"device\" /* Device */];\n    case \"document\" /* Document */:\n      return [\"document\" /* Document */, \"secure_document\" /* SecureDocument */, \"orb\" /* Orb */];\n    case \"secure_document\" /* SecureDocument */:\n      return [\"secure_document\" /* SecureDocument */, \"orb\" /* Orb */];\n    case \"orb\" /* Orb */:\n      return [\"orb\" /* Orb */];\n    default:\n      throw new Error(`Unknown verification level: ${verification_level}`);\n  }\n};\nvar credential_type_to_verification_level = (credential_type) => {\n  switch (credential_type) {\n    case \"orb\" /* Orb */:\n      return \"orb\" /* Orb */;\n    case \"secure_document\" /* SecureDocument */:\n      return \"secure_document\" /* SecureDocument */;\n    case \"document\" /* Document */:\n      return \"document\" /* Document */;\n    case \"device\" /* Device */:\n      return \"device\" /* Device */;\n    default:\n      throw new Error(`Unknown credential_type: ${credential_type}`);\n  }\n};\n\n// src/lib/crypto.ts\nvar encoder = new TextEncoder();\nvar decoder = new TextDecoder();\nvar generateKey = async () => {\n  return {\n    iv: window.crypto.getRandomValues(new Uint8Array(12)),\n    key: await window.crypto.subtle.generateKey({ name: \"AES-GCM\", length: 256 }, true, [\"encrypt\", \"decrypt\"])\n  };\n};\nvar exportKey = async (key) => {\n  return buffer_encode(await window.crypto.subtle.exportKey(\"raw\", key));\n};\nvar encryptRequest = async (key, iv, request) => {\n  return {\n    iv: buffer_encode(iv),\n    payload: buffer_encode(\n      await window.crypto.subtle.encrypt({ name: \"AES-GCM\", iv }, key, encoder.encode(request))\n    )\n  };\n};\nvar decryptResponse = async (key, iv, payload) => {\n  return decoder.decode(await window.crypto.subtle.decrypt({ name: \"AES-GCM\", iv }, key, buffer_decode(payload)));\n};\n\n// src/bridge.ts\nvar DEFAULT_BRIDGE_URL = \"https://bridge.worldcoin.org\";\nvar useWorldBridgeStore = (0,zustand__WEBPACK_IMPORTED_MODULE_2__.create)((set, get) => ({\n  iv: null,\n  key: null,\n  result: null,\n  errorCode: null,\n  requestId: null,\n  connectorURI: null,\n  bridge_url: DEFAULT_BRIDGE_URL,\n  verificationState: \"loading_widget\" /* PreparingClient */,\n  createClient: async ({ bridge_url, app_id, verification_level, action_description, action, signal, partner }) => {\n    const { key, iv } = await generateKey();\n    if (bridge_url) {\n      const validation = validate_bridge_url(bridge_url, app_id.includes(\"staging\"));\n      if (!validation.valid) {\n        console.error(validation.errors.join(\"\\n\"));\n        set({ verificationState: \"failed\" /* Failed */ });\n        throw new Error(\"Invalid bridge_url. Please check the console for more details.\");\n      }\n    }\n    const res = await fetch(new URL(\"/request\", bridge_url ?? DEFAULT_BRIDGE_URL), {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(\n        await encryptRequest(\n          key,\n          iv,\n          JSON.stringify({\n            app_id,\n            action_description,\n            action: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.encodeAction)(action),\n            signal: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.generateSignal)(signal).digest,\n            credential_types: verification_level_to_credential_types(\n              verification_level ?? DEFAULT_VERIFICATION_LEVEL\n            ),\n            verification_level: verification_level ?? DEFAULT_VERIFICATION_LEVEL\n          })\n        )\n      )\n    });\n    if (!res.ok) {\n      set({ verificationState: \"failed\" /* Failed */ });\n      throw new Error(\"Failed to create client\");\n    }\n    const { request_id } = await res.json();\n    set({\n      iv,\n      key,\n      requestId: request_id,\n      bridge_url: bridge_url ?? DEFAULT_BRIDGE_URL,\n      verificationState: \"awaiting_connection\" /* WaitingForConnection */,\n      connectorURI: `https://world.org/verify?t=wld&i=${request_id}&k=${encodeURIComponent(\n        await exportKey(key)\n      )}${bridge_url && bridge_url !== DEFAULT_BRIDGE_URL ? `&b=${encodeURIComponent(bridge_url)}` : \"\"}${partner ? `&partner=${encodeURIComponent(true)}` : \"\"}`\n    });\n  },\n  pollForUpdates: async () => {\n    const key = get().key;\n    if (!key) throw new Error(\"No keypair found. Please call `createClient` first.\");\n    const res = await fetch(new URL(`/response/${get().requestId}`, get().bridge_url));\n    if (!res.ok) {\n      return set({\n        errorCode: \"connection_failed\" /* ConnectionFailed */,\n        verificationState: \"failed\" /* Failed */\n      });\n    }\n    const { response, status } = await res.json();\n    if (status != \"completed\" /* Completed */) {\n      return set({\n        verificationState: status == \"retrieved\" /* Retrieved */ ? \"awaiting_app\" /* WaitingForApp */ : \"awaiting_connection\" /* WaitingForConnection */\n      });\n    }\n    let result = JSON.parse(\n      await decryptResponse(key, buffer_decode(response.iv), response.payload)\n    );\n    if (\"error_code\" in result) {\n      return set({\n        errorCode: result.error_code,\n        verificationState: \"failed\" /* Failed */\n      });\n    }\n    if (\"credential_type\" in result) {\n      result = {\n        verification_level: credential_type_to_verification_level(result.credential_type),\n        ...result\n      };\n    }\n    set({\n      result,\n      key: null,\n      requestId: null,\n      connectorURI: null,\n      verificationState: \"confirmed\" /* Confirmed */\n    });\n  },\n  reset: () => {\n    set({\n      iv: null,\n      key: null,\n      result: null,\n      errorCode: null,\n      requestId: null,\n      connectorURI: null,\n      verificationState: \"loading_widget\" /* PreparingClient */\n    });\n  }\n}));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@worldcoin/idkit-core/build/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/lib/backend.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyCloudProof: () => (/* binding */ verifyCloudProof)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-HZ2SQA5V.js */ \"(rsc)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n/* harmony import */ var browser_or_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-or-node */ \"(rsc)/./node_modules/browser-or-node/dist/index.mjs\");\n\n\n// src/lib/backend.ts\n\nasync function verifyCloudProof(proof, app_id, action, signal, endpoint) {\n  if (browser_or_node__WEBPACK_IMPORTED_MODULE_1__.isBrowser) {\n    throw new Error(\"verifyCloudProof can only be used in the backend.\");\n  }\n  const response = await fetch(endpoint ?? `https://developer.worldcoin.org/api/v2/verify/${app_id}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      ...proof,\n      action,\n      signal_hash: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.hashToField)(signal ?? \"\").digest\n    })\n  });\n  if (response.ok) {\n    return { success: true };\n  } else {\n    return { success: false, ...await response.json() };\n  }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9iYWNrZW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUU4Qjs7QUFFOUI7QUFDNEM7QUFDNUM7QUFDQSxNQUFNLHNEQUFTO0FBQ2Y7QUFDQTtBQUNBLDRGQUE0RixPQUFPO0FBQ25HO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0RBQVc7QUFDOUIsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLGFBQWE7QUFDYixJQUFJO0FBQ0osYUFBYTtBQUNiO0FBQ0E7QUFHRSIsInNvdXJjZXMiOlsiL1VzZXJzL21hdGVvc2F1dG9uL01hdHRlby1Qcm9qZWN0L215LWFwcC9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9iYWNrZW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGhhc2hUb0ZpZWxkXG59IGZyb20gXCIuLi9jaHVuay1IWjJTUUE1Vi5qc1wiO1xuXG4vLyBzcmMvbGliL2JhY2tlbmQudHNcbmltcG9ydCB7IGlzQnJvd3NlciB9IGZyb20gXCJicm93c2VyLW9yLW5vZGVcIjtcbmFzeW5jIGZ1bmN0aW9uIHZlcmlmeUNsb3VkUHJvb2YocHJvb2YsIGFwcF9pZCwgYWN0aW9uLCBzaWduYWwsIGVuZHBvaW50KSB7XG4gIGlmIChpc0Jyb3dzZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ2ZXJpZnlDbG91ZFByb29mIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIGJhY2tlbmQuXCIpO1xuICB9XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZW5kcG9pbnQgPz8gYGh0dHBzOi8vZGV2ZWxvcGVyLndvcmxkY29pbi5vcmcvYXBpL3YyL3ZlcmlmeS8ke2FwcF9pZH1gLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgLi4ucHJvb2YsXG4gICAgICBhY3Rpb24sXG4gICAgICBzaWduYWxfaGFzaDogaGFzaFRvRmllbGQoc2lnbmFsID8/IFwiXCIpLmRpZ2VzdFxuICAgIH0pXG4gIH0pO1xuICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIC4uLmF3YWl0IHJlc3BvbnNlLmpzb24oKSB9O1xuICB9XG59XG5leHBvcnQge1xuICB2ZXJpZnlDbG91ZFByb29mXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/lib/hashing.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAction: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.encodeAction),\n/* harmony export */   generateSignal: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.generateSignal),\n/* harmony export */   hashToField: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.hashToField),\n/* harmony export */   packAndEncode: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.packAndEncode),\n/* harmony export */   solidityEncode: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.solidityEncode)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-HZ2SQA5V.js */ \"(rsc)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9oYXNoaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQU04QjtBQU81QiIsInNvdXJjZXMiOlsiL1VzZXJzL21hdGVvc2F1dG9uL01hdHRlby1Qcm9qZWN0L215LWFwcC9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9oYXNoaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGVuY29kZUFjdGlvbixcbiAgZ2VuZXJhdGVTaWduYWwsXG4gIGhhc2hUb0ZpZWxkLFxuICBwYWNrQW5kRW5jb2RlLFxuICBzb2xpZGl0eUVuY29kZVxufSBmcm9tIFwiLi4vY2h1bmstSFoyU1FBNVYuanNcIjtcbmV4cG9ydCB7XG4gIGVuY29kZUFjdGlvbixcbiAgZ2VuZXJhdGVTaWduYWwsXG4gIGhhc2hUb0ZpZWxkLFxuICBwYWNrQW5kRW5jb2RlLFxuICBzb2xpZGl0eUVuY29kZVxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@worldcoin/minikit-js/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@worldcoin/minikit-js/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command),\n/* harmony export */   GetPermissionsErrorCodes: () => (/* binding */ GetPermissionsErrorCodes),\n/* harmony export */   GetPermissionsErrorMessage: () => (/* binding */ GetPermissionsErrorMessage),\n/* harmony export */   MiniKit: () => (/* binding */ MiniKit),\n/* harmony export */   MiniKitInstallErrorCodes: () => (/* binding */ MiniKitInstallErrorCodes),\n/* harmony export */   MiniKitInstallErrorMessage: () => (/* binding */ MiniKitInstallErrorMessage),\n/* harmony export */   Network: () => (/* binding */ Network),\n/* harmony export */   PaymentErrorCodes: () => (/* binding */ PaymentErrorCodes),\n/* harmony export */   PaymentErrorMessage: () => (/* binding */ PaymentErrorMessage),\n/* harmony export */   PaymentValidationErrors: () => (/* binding */ PaymentValidationErrors),\n/* harmony export */   Permission: () => (/* binding */ Permission),\n/* harmony export */   RequestPermissionErrorCodes: () => (/* binding */ RequestPermissionErrorCodes),\n/* harmony export */   RequestPermissionErrorMessage: () => (/* binding */ RequestPermissionErrorMessage),\n/* harmony export */   ResponseEvent: () => (/* binding */ ResponseEvent),\n/* harmony export */   SAFE_CONTRACT_ABI: () => (/* binding */ SAFE_CONTRACT_ABI),\n/* harmony export */   SendHapticFeedbackErrorCodes: () => (/* binding */ SendHapticFeedbackErrorCodes),\n/* harmony export */   SendHapticFeedbackErrorMessage: () => (/* binding */ SendHapticFeedbackErrorMessage),\n/* harmony export */   SendTransactionErrorCodes: () => (/* binding */ SendTransactionErrorCodes),\n/* harmony export */   SendTransactionErrorMessage: () => (/* binding */ SendTransactionErrorMessage),\n/* harmony export */   ShareContactsErrorCodes: () => (/* binding */ ShareContactsErrorCodes),\n/* harmony export */   ShareContactsErrorMessage: () => (/* binding */ ShareContactsErrorMessage),\n/* harmony export */   SignMessageErrorCodes: () => (/* binding */ SignMessageErrorCodes),\n/* harmony export */   SignMessageErrorMessage: () => (/* binding */ SignMessageErrorMessage),\n/* harmony export */   SignTypedDataErrorCodes: () => (/* binding */ SignTypedDataErrorCodes),\n/* harmony export */   SignTypedDataErrorMessage: () => (/* binding */ SignTypedDataErrorMessage),\n/* harmony export */   TokenDecimals: () => (/* binding */ TokenDecimals),\n/* harmony export */   Tokens: () => (/* binding */ Tokens),\n/* harmony export */   VerificationErrorCodes: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes),\n/* harmony export */   VerificationErrorMessage: () => (/* binding */ VerificationErrorMessage),\n/* harmony export */   VerificationLevel: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel),\n/* harmony export */   WalletAuthErrorCodes: () => (/* binding */ WalletAuthErrorCodes),\n/* harmony export */   WalletAuthErrorMessage: () => (/* binding */ WalletAuthErrorMessage),\n/* harmony export */   getIsUserVerified: () => (/* binding */ getIsUserVerified),\n/* harmony export */   parseSiweMessage: () => (/* binding */ parseSiweMessage),\n/* harmony export */   tokenToDecimals: () => (/* binding */ tokenToDecimals),\n/* harmony export */   verifyCloudProof: () => (/* reexport safe */ _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_10__.verifyCloudProof),\n/* harmony export */   verifySiweMessage: () => (/* binding */ verifySiweMessage)\n/* harmony export */ });\n/* harmony import */ var _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @worldcoin/idkit-core */ \"(rsc)/./node_modules/@worldcoin/idkit-core/build/index.js\");\n/* harmony import */ var _worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @worldcoin/idkit-core/hashing */ \"(rsc)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/viem/_esm/clients/createPublicClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/viem/_esm/clients/transports/http.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/chains */ \"(rsc)/./node_modules/viem/_esm/chains/definitions/worldchain.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/viem/_esm/utils/signature/hashMessage.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/viem/_esm/actions/getContract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/viem/_esm/utils/signature/recoverAddress.js\");\n/* harmony import */ var _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @worldcoin/idkit-core/backend */ \"(rsc)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js\");\n// minikit.ts\n\n\n\n// types/payment.ts\nvar Tokens = /* @__PURE__ */ ((Tokens3) => {\n  Tokens3[\"USDCE\"] = \"USDCE\";\n  Tokens3[\"WLD\"] = \"WLD\";\n  return Tokens3;\n})(Tokens || {});\nvar TokenDecimals = {\n  [\"USDCE\" /* USDCE */]: 6,\n  [\"WLD\" /* WLD */]: 18\n};\nvar Network = /* @__PURE__ */ ((Network2) => {\n  Network2[\"Optimism\"] = \"optimism\";\n  Network2[\"WorldChain\"] = \"worldchain\";\n  return Network2;\n})(Network || {});\n\n// helpers/payment/client.ts\nvar tokenToDecimals = (amount, token) => {\n  const decimals = TokenDecimals[token];\n  if (decimals === void 0) {\n    throw new Error(`Invalid token: ${token}`);\n  }\n  const factor = 10 ** decimals;\n  const result = amount * factor;\n  if (!Number.isInteger(result)) {\n    throw new Error(`The resulting amount is not a whole number: ${result}`);\n  }\n  return result;\n};\nvar validatePaymentPayload = (payload) => {\n  if (payload.tokens.some(\n    (token) => token.symbol == \"USDCE\" && parseFloat(token.token_amount) < 0.1\n  )) {\n    console.error(\"USDCE amount should be greater than $0.1\");\n    return false;\n  }\n  if (payload.reference.length > 36) {\n    console.error(\"Reference must not exceed 36 characters\");\n    return false;\n  }\n  if (typeof payload.reference !== \"string\") {\n    throw new Error(\"Reference must be a string\");\n  }\n  return true;\n};\n\n// helpers/proof/index.ts\n\n\nvar semaphoreVerifierAddress = \"0x79f46b94d134109EbcbbddBAeD0E88790409A0e4\";\nvar semaphoreVerifierAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256[8]\",\n        name: \"proof\",\n        type: \"uint256[8]\"\n      }\n    ],\n    name: \"compressProof\",\n    outputs: [\n      {\n        internalType: \"uint256[4]\",\n        name: \"compressed\",\n        type: \"uint256[4]\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar compressAndPadProof = async (proof, rpcUrl) => {\n  try {\n    const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_2__.createPublicClient)({\n      chain: viem_chains__WEBPACK_IMPORTED_MODULE_3__.worldchain,\n      transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.http)(\n        rpcUrl || \"https://worldchain-mainnet.g.alchemy.com/public\"\n      )\n    });\n    const decodedProof = (0,viem__WEBPACK_IMPORTED_MODULE_5__.decodeAbiParameters)(\n      [{ type: \"uint256[8]\" }],\n      proof\n    )[0];\n    const compressedProof = await publicClient.readContract({\n      address: semaphoreVerifierAddress,\n      abi: semaphoreVerifierAbi,\n      functionName: \"compressProof\",\n      args: [decodedProof]\n    });\n    const paddedProof = [...compressedProof, 0n, 0n, 0n, 0n];\n    return (0,viem__WEBPACK_IMPORTED_MODULE_6__.encodeAbiParameters)([{ type: \"uint256[8]\" }], [paddedProof]);\n  } catch (e) {\n    console.log(\"Failed to compress proof\", {\n      e,\n      proof\n    });\n    return proof;\n  }\n};\n\n// helpers/siwe/siwe.ts\n\n\nvar PREAMBLE = \" wants you to sign in with your Ethereum account:\";\nvar URI_TAG = \"URI: \";\nvar VERSION_TAG = \"Version: \";\nvar CHAIN_TAG = \"Chain ID: \";\nvar NONCE_TAG = \"Nonce: \";\nvar IAT_TAG = \"Issued At: \";\nvar EXP_TAG = \"Expiration Time: \";\nvar NBF_TAG = \"Not Before: \";\nvar RID_TAG = \"Request ID: \";\nvar ERC_191_PREFIX = \"\u0019Ethereum Signed Message:\\n\";\nvar tagged = (line, tag) => {\n  if (line && line.includes(tag)) {\n    return line.replace(tag, \"\");\n  } else {\n    throw new Error(`Missing '${tag}'`);\n  }\n};\nvar parseSiweMessage = (inputString) => {\n  const lines = inputString.split(\"\\n\")[Symbol.iterator]();\n  const domain = tagged(lines.next()?.value, PREAMBLE);\n  const address = lines.next()?.value;\n  lines.next();\n  const nextValue = lines.next()?.value;\n  let statement;\n  if (nextValue) {\n    statement = nextValue;\n    lines.next();\n  }\n  const uri = tagged(lines.next()?.value, URI_TAG);\n  const version = tagged(lines.next()?.value, VERSION_TAG);\n  const chain_id = tagged(lines.next()?.value, CHAIN_TAG);\n  const nonce = tagged(lines.next()?.value, NONCE_TAG);\n  const issued_at = tagged(lines.next()?.value, IAT_TAG);\n  let expiration_time, not_before, request_id;\n  for (let line of lines) {\n    if (line.startsWith(EXP_TAG)) {\n      expiration_time = tagged(line, EXP_TAG);\n    } else if (line.startsWith(NBF_TAG)) {\n      not_before = tagged(line, NBF_TAG);\n    } else if (line.startsWith(RID_TAG)) {\n      request_id = tagged(line, RID_TAG);\n    }\n  }\n  if (lines.next().done === false) {\n    throw new Error(\"Extra lines in the input\");\n  }\n  const siweMessageData = {\n    domain,\n    address,\n    statement,\n    uri,\n    version,\n    chain_id,\n    nonce,\n    issued_at,\n    expiration_time,\n    not_before,\n    request_id\n  };\n  return siweMessageData;\n};\nvar generateSiweMessage = (siweMessageData) => {\n  let siweMessage = \"\";\n  if (siweMessageData.scheme) {\n    siweMessage += `${siweMessageData.scheme}://${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  } else {\n    siweMessage += `${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  }\n  if (siweMessageData.address) {\n    siweMessage += `${siweMessageData.address}\n`;\n  } else {\n    siweMessage += \"{address}\\n\";\n  }\n  siweMessage += \"\\n\";\n  if (siweMessageData.statement) {\n    siweMessage += `${siweMessageData.statement}\n`;\n  }\n  siweMessage += \"\\n\";\n  siweMessage += `URI: ${siweMessageData.uri}\n`;\n  siweMessage += `Version: ${siweMessageData.version}\n`;\n  siweMessage += `Chain ID: ${siweMessageData.chain_id}\n`;\n  siweMessage += `Nonce: ${siweMessageData.nonce}\n`;\n  siweMessage += `Issued At: ${siweMessageData.issued_at}\n`;\n  if (siweMessageData.expiration_time) {\n    siweMessage += `Expiration Time: ${siweMessageData.expiration_time}\n`;\n  }\n  if (siweMessageData.not_before) {\n    siweMessage += `Not Before: ${siweMessageData.not_before}\n`;\n  }\n  if (siweMessageData.request_id) {\n    siweMessage += `Request ID: ${siweMessageData.request_id}\n`;\n  }\n  return siweMessage;\n};\nvar SAFE_CONTRACT_ABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"isOwner\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar verifySiweMessage = async (payload, nonce, statement, requestId, userProvider) => {\n  if (typeof window !== \"undefined\") {\n    throw new Error(\"Verify can only be called in the backend\");\n  }\n  const { message, signature, address } = payload;\n  const siweMessageData = parseSiweMessage(message);\n  if (siweMessageData.expiration_time) {\n    const expirationTime = new Date(siweMessageData.expiration_time);\n    if (expirationTime < /* @__PURE__ */ new Date()) {\n      throw new Error(\"Expired message\");\n    }\n  }\n  if (siweMessageData.not_before) {\n    const notBefore = new Date(siweMessageData.not_before);\n    if (notBefore > /* @__PURE__ */ new Date()) {\n      throw new Error(\"Not Before time has not passed\");\n    }\n  }\n  if (nonce && siweMessageData.nonce !== nonce) {\n    throw new Error(\n      `Nonce mismatch. Got: ${siweMessageData.nonce}, Expected: ${nonce}`\n    );\n  }\n  if (statement && siweMessageData.statement !== statement) {\n    throw new Error(\n      `Statement mismatch. Got: ${siweMessageData.statement}, Expected: ${statement}`\n    );\n  }\n  if (requestId && siweMessageData.request_id !== requestId) {\n    throw new Error(\n      `Request ID mismatch. Got: ${siweMessageData.request_id}, Expected: ${requestId}`\n    );\n  }\n  let provider = userProvider || (0,viem__WEBPACK_IMPORTED_MODULE_2__.createPublicClient)({ chain: viem_chains__WEBPACK_IMPORTED_MODULE_3__.worldchain, transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.http)() });\n  const signedMessage = `${ERC_191_PREFIX}${message.length}${message}`;\n  const hashedMessage = (0,viem__WEBPACK_IMPORTED_MODULE_7__.hashMessage)(signedMessage);\n  const contract = (0,viem__WEBPACK_IMPORTED_MODULE_8__.getContract)({\n    address,\n    abi: SAFE_CONTRACT_ABI,\n    client: provider\n  });\n  try {\n    const recoveredAddress = await (0,viem__WEBPACK_IMPORTED_MODULE_9__.recoverAddress)({\n      hash: hashedMessage,\n      signature: `0x${signature}`\n    });\n    const isOwner = await contract.read.isOwner([recoveredAddress]);\n    if (!isOwner) {\n      throw new Error(\"Signature verification failed, invalid owner\");\n    }\n  } catch (error) {\n    throw new Error(\"Signature verification failed\");\n  }\n  return { isValid: true, siweMessageData };\n};\n\n// helpers/siwe/validate-wallet-auth-command-input.ts\nvar validateWalletAuthCommandInput = (params) => {\n  if (!params.nonce) {\n    return { valid: false, message: \"'nonce' is required\" };\n  }\n  if (params.nonce.length < 8) {\n    return { valid: false, message: \"'nonce' must be at least 8 characters\" };\n  }\n  if (params.statement && params.statement.includes(\"\\n\")) {\n    return { valid: false, message: \"'statement' must not contain newlines\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) < /* @__PURE__ */ new Date()) {\n    return { valid: false, message: \"'expirationTime' must be in the future\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'expirationTime' must be within 7 days\" };\n  }\n  if (params.notBefore && new Date(params.notBefore) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'notBefore' must be within 7 days\" };\n  }\n  return { valid: true };\n};\n\n// helpers/transaction/validate-payload.ts\nvar isValidHex = (str) => {\n  return /^0x[0-9A-Fa-f]+$/.test(str);\n};\nvar processPayload = (payload) => {\n  if (typeof payload === \"boolean\" || typeof payload === \"string\" || payload === null || payload === void 0) {\n    return payload;\n  }\n  if (typeof payload === \"number\" || typeof payload === \"bigint\") {\n    return String(payload);\n  }\n  if (Array.isArray(payload)) {\n    return payload.map((value) => processPayload(value));\n  }\n  if (typeof payload === \"object\") {\n    const result = { ...payload };\n    if (\"value\" in result && result.value !== void 0) {\n      if (typeof result.value !== \"string\") {\n        result.value = String(result.value);\n      }\n      if (!isValidHex(result.value)) {\n        console.error(\n          \"Transaction value must be a valid hex string\",\n          result.value\n        );\n        throw new Error(\n          `Transaction value must be a valid hex string: ${result.value}`\n        );\n      }\n    }\n    for (const key in result) {\n      if (Object.prototype.hasOwnProperty.call(result, key)) {\n        result[key] = processPayload(result[key]);\n      }\n    }\n    return result;\n  }\n  return payload;\n};\nvar validateSendTransactionPayload = (payload) => {\n  return processPayload(payload);\n};\n\n// helpers/usernames/index.ts\nvar getUserProfile = async (address) => {\n  const res = await fetch(\"https://usernames.worldcoin.org/api/v1/query\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      addresses: [address]\n    })\n  });\n  const usernames = await res.json();\n  return usernames?.[0] ?? { username: null, profilePictureUrl: null };\n};\n\n// types/commands.ts\nvar Command = /* @__PURE__ */ ((Command2) => {\n  Command2[\"Verify\"] = \"verify\";\n  Command2[\"Pay\"] = \"pay\";\n  Command2[\"WalletAuth\"] = \"wallet-auth\";\n  Command2[\"SendTransaction\"] = \"send-transaction\";\n  Command2[\"SignMessage\"] = \"sign-message\";\n  Command2[\"SignTypedData\"] = \"sign-typed-data\";\n  Command2[\"ShareContacts\"] = \"share-contacts\";\n  Command2[\"RequestPermission\"] = \"request-permission\";\n  Command2[\"GetPermissions\"] = \"get-permissions\";\n  Command2[\"SendHapticFeedback\"] = \"send-haptic-feedback\";\n  return Command2;\n})(Command || {});\nvar Permission = /* @__PURE__ */ ((Permission2) => {\n  Permission2[\"Notifications\"] = \"notifications\";\n  Permission2[\"Contacts\"] = \"contacts\";\n  return Permission2;\n})(Permission || {});\n\n// types/errors.ts\n\n\nvar VerificationErrorMessage = {\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.VerificationRejected]: \"You've cancelled the request in World App.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MaxVerificationsReached]: \"You have already verified the maximum number of times for this action.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.CredentialUnavailable]: \"It seems you do not have the verification level required by this app.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MalformedRequest]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InvalidNetwork]: \"Invalid network. If you are the app owner, visit docs.worldcoin.org/test for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofFailed]: \"There was an issue fetching your credential. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofPending]: \"Your identity is still being registered. Please wait a few minutes and try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.UnexpectedResponse]: \"Unexpected response from your wallet. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.FailedByHostApp]: \"Verification failed by the app. Please contact the app owner for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.GenericError]: \"Something unexpected went wrong. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.ConnectionFailed]: \"Connection to your wallet failed. Please try again.\"\n};\nvar PaymentErrorCodes = /* @__PURE__ */ ((PaymentErrorCodes2) => {\n  PaymentErrorCodes2[\"InputError\"] = \"input_error\";\n  PaymentErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  PaymentErrorCodes2[\"PaymentRejected\"] = \"payment_rejected\";\n  PaymentErrorCodes2[\"InvalidReceiver\"] = \"invalid_receiver\";\n  PaymentErrorCodes2[\"InsufficientBalance\"] = \"insufficient_balance\";\n  PaymentErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  PaymentErrorCodes2[\"GenericError\"] = \"generic_error\";\n  PaymentErrorCodes2[\"UserBlocked\"] = \"user_blocked\";\n  return PaymentErrorCodes2;\n})(PaymentErrorCodes || {});\nvar PaymentErrorMessage = {\n  [\"input_error\" /* InputError */]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [\"user_rejected\" /* UserRejected */]: \"You have cancelled the payment in World App.\",\n  [\"payment_rejected\" /* PaymentRejected */]: \"You've cancelled the payment in World App.\",\n  [\"invalid_receiver\" /* InvalidReceiver */]: \"The receiver address is invalid. Please contact the app owner.\",\n  [\"insufficient_balance\" /* InsufficientBalance */]: \"You do not have enough balance to complete this transaction.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"user_blocked\" /* UserBlocked */]: \"User's region is blocked from making payments.\"\n};\nvar PaymentValidationErrors = /* @__PURE__ */ ((PaymentValidationErrors2) => {\n  PaymentValidationErrors2[\"MalformedRequest\"] = \"There was a problem with this request. Please try again or contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidTokenAddress\"] = \"The token address is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidAppId\"] = \"The app ID is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"DuplicateReference\"] = \"This reference ID already exists please generate a new one and try again.\";\n  return PaymentValidationErrors2;\n})(PaymentValidationErrors || {});\nvar WalletAuthErrorCodes = /* @__PURE__ */ ((WalletAuthErrorCodes2) => {\n  WalletAuthErrorCodes2[\"MalformedRequest\"] = \"malformed_request\";\n  WalletAuthErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  WalletAuthErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return WalletAuthErrorCodes2;\n})(WalletAuthErrorCodes || {});\nvar WalletAuthErrorMessage = {\n  [\"malformed_request\" /* MalformedRequest */]: \"Provided parameters in the request are invalid.\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SendTransactionErrorCodes = /* @__PURE__ */ ((SendTransactionErrorCodes2) => {\n  SendTransactionErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SendTransactionErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SendTransactionErrorCodes2[\"InputError\"] = \"input_error\";\n  SendTransactionErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SendTransactionErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  SendTransactionErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SendTransactionErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SendTransactionErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SendTransactionErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  SendTransactionErrorCodes2[\"DailyTxLimitReached\"] = \"daily_tx_limit_reached\";\n  SendTransactionErrorCodes2[\"PermittedAmountExceedsSlippage\"] = \"permitted_amount_exceeds_slippage\";\n  SendTransactionErrorCodes2[\"PermittedAmountNotFound\"] = \"permitted_amount_not_found\";\n  return SendTransactionErrorCodes2;\n})(SendTransactionErrorCodes || {});\nvar SendTransactionErrorMessage = {\n  [\"invalid_operation\" /* InvalidOperation */]: \"Transaction included an operation that was invalid\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"input_error\" /* InputError */]: \"Invalid payload.\",\n  [\"simulation_failed\" /* SimulationFailed */]: \"The transaction simulation failed.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again later.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"disallowed_operation\" /* DisallowedOperation */]: \"The operation requested is not allowed. Please refer to the docs.\",\n  [\"invalid_contract\" /* InvalidContract */]: \"The contract address is not allowed for your application. Please check your developer portal configurations\",\n  [\"malicious_operation\" /* MaliciousOperation */]: \"The operation requested is considered malicious.\",\n  [\"daily_tx_limit_reached\" /* DailyTxLimitReached */]: \"Daily transaction limit reached. Max 100 transactions per day. Wait until the next day.\",\n  [\"permitted_amount_exceeds_slippage\" /* PermittedAmountExceedsSlippage */]: \"Permitted amount exceeds slippage. You must spend at least 90% of the permitted amount.\",\n  [\"permitted_amount_not_found\" /* PermittedAmountNotFound */]: \"Permitted amount not found in permit2 payload.\"\n};\nvar SignMessageErrorCodes = /* @__PURE__ */ ((SignMessageErrorCodes2) => {\n  SignMessageErrorCodes2[\"InvalidMessage\"] = \"invalid_message\";\n  SignMessageErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignMessageErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return SignMessageErrorCodes2;\n})(SignMessageErrorCodes || {});\nvar SignMessageErrorMessage = {\n  [\"invalid_message\" /* InvalidMessage */]: \"Invalid message requested\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SignTypedDataErrorCodes = /* @__PURE__ */ ((SignTypedDataErrorCodes2) => {\n  SignTypedDataErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SignTypedDataErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignTypedDataErrorCodes2[\"InputError\"] = \"input_error\";\n  SignTypedDataErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SignTypedDataErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SignTypedDataErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SignTypedDataErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SignTypedDataErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  return SignTypedDataErrorCodes2;\n})(SignTypedDataErrorCodes || {});\nvar SignTypedDataErrorMessage = {\n  [\"invalid_operation\" /* InvalidOperation */]: \"Transaction included an operation that was invalid\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"input_error\" /* InputError */]: \"Invalid payload.\",\n  [\"simulation_failed\" /* SimulationFailed */]: \"The transaction simulation failed.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"disallowed_operation\" /* DisallowedOperation */]: \"The operation requested is not allowed. Please refer to the docs.\",\n  [\"invalid_contract\" /* InvalidContract */]: \"The contract address is not allowed for your application. Please check your developer portal configurations\",\n  [\"malicious_operation\" /* MaliciousOperation */]: \"The operation requested is considered malicious.\"\n};\nvar MiniKitInstallErrorCodes = /* @__PURE__ */ ((MiniKitInstallErrorCodes2) => {\n  MiniKitInstallErrorCodes2[\"Unknown\"] = \"unknown\";\n  MiniKitInstallErrorCodes2[\"AlreadyInstalled\"] = \"already_installed\";\n  MiniKitInstallErrorCodes2[\"OutsideOfWorldApp\"] = \"outside_of_worldapp\";\n  MiniKitInstallErrorCodes2[\"NotOnClient\"] = \"not_on_client\";\n  MiniKitInstallErrorCodes2[\"AppOutOfDate\"] = \"app_out_of_date\";\n  return MiniKitInstallErrorCodes2;\n})(MiniKitInstallErrorCodes || {});\nvar MiniKitInstallErrorMessage = {\n  [\"unknown\" /* Unknown */]: \"Failed to install MiniKit.\",\n  [\"already_installed\" /* AlreadyInstalled */]: \"MiniKit is already installed.\",\n  [\"outside_of_worldapp\" /* OutsideOfWorldApp */]: \"MiniApp launched outside of WorldApp.\",\n  [\"not_on_client\" /* NotOnClient */]: \"Window object is not available.\",\n  [\"app_out_of_date\" /* AppOutOfDate */]: \"WorldApp is out of date. Please update the app.\"\n};\nvar ShareContactsErrorCodes = /* @__PURE__ */ ((ShareContactsErrorCodes2) => {\n  ShareContactsErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  ShareContactsErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return ShareContactsErrorCodes2;\n})(ShareContactsErrorCodes || {});\nvar ShareContactsErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar RequestPermissionErrorCodes = /* @__PURE__ */ ((RequestPermissionErrorCodes2) => {\n  RequestPermissionErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  RequestPermissionErrorCodes2[\"GenericError\"] = \"generic_error\";\n  RequestPermissionErrorCodes2[\"AlreadyRequested\"] = \"already_requested\";\n  RequestPermissionErrorCodes2[\"PermissionDisabled\"] = \"permission_disabled\";\n  RequestPermissionErrorCodes2[\"AlreadyGranted\"] = \"already_granted\";\n  RequestPermissionErrorCodes2[\"UnsupportedPermission\"] = \"unsupported_permission\";\n  return RequestPermissionErrorCodes2;\n})(RequestPermissionErrorCodes || {});\nvar RequestPermissionErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User declined sharing contacts\",\n  [\"generic_error\" /* GenericError */]: \"Request failed for unknown reason.\",\n  [\"already_requested\" /* AlreadyRequested */]: \"User has already declined turning on notifications once\",\n  [\"permission_disabled\" /* PermissionDisabled */]: \"User does not have this permission enabled in World App\",\n  [\"already_granted\" /* AlreadyGranted */]: \"If the user has already granted this mini app permission\",\n  [\"unsupported_permission\" /* UnsupportedPermission */]: \"The permission requested is not supported by this mini app\"\n};\nvar GetPermissionsErrorCodes = /* @__PURE__ */ ((GetPermissionsErrorCodes2) => {\n  GetPermissionsErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return GetPermissionsErrorCodes2;\n})(GetPermissionsErrorCodes || {});\nvar GetPermissionsErrorMessage = {\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\"\n};\nvar SendHapticFeedbackErrorCodes = /* @__PURE__ */ ((SendHapticFeedbackErrorCodes2) => {\n  SendHapticFeedbackErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SendHapticFeedbackErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  return SendHapticFeedbackErrorCodes2;\n})(SendHapticFeedbackErrorCodes || {});\nvar SendHapticFeedbackErrorMessage = {\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\"\n};\n\n// helpers/send-webview-event.ts\nvar sendWebviewEvent = (payload) => {\n  if (window.webkit) {\n    window.webkit?.messageHandlers?.minikit?.postMessage?.(payload);\n  } else if (window.Android) {\n    window.Android.postMessage?.(JSON.stringify(payload));\n  }\n};\n\n// types/responses.ts\nvar ResponseEvent = /* @__PURE__ */ ((ResponseEvent2) => {\n  ResponseEvent2[\"MiniAppVerifyAction\"] = \"miniapp-verify-action\";\n  ResponseEvent2[\"MiniAppPayment\"] = \"miniapp-payment\";\n  ResponseEvent2[\"MiniAppWalletAuth\"] = \"miniapp-wallet-auth\";\n  ResponseEvent2[\"MiniAppSendTransaction\"] = \"miniapp-send-transaction\";\n  ResponseEvent2[\"MiniAppSignMessage\"] = \"miniapp-sign-message\";\n  ResponseEvent2[\"MiniAppSignTypedData\"] = \"miniapp-sign-typed-data\";\n  ResponseEvent2[\"MiniAppShareContacts\"] = \"miniapp-share-contacts\";\n  ResponseEvent2[\"MiniAppRequestPermission\"] = \"miniapp-request-permission\";\n  ResponseEvent2[\"MiniAppGetPermissions\"] = \"miniapp-get-permissions\";\n  ResponseEvent2[\"MiniAppSendHapticFeedback\"] = \"miniapp-send-haptic-feedback\";\n  return ResponseEvent2;\n})(ResponseEvent || {});\n\n// minikit.ts\nvar sendMiniKitEvent = (payload) => {\n  sendWebviewEvent(payload);\n};\nvar _MiniKit = class _MiniKit {\n  static sendInit() {\n    sendWebviewEvent({\n      command: \"init\",\n      payload: { version: this.MINIKIT_VERSION }\n    });\n  }\n  static subscribe(event, handler) {\n    if (event === \"miniapp-wallet-auth\" /* MiniAppWalletAuth */) {\n      const originalHandler = handler;\n      const wrappedHandler = (payload) => {\n        if (payload.status === \"success\") {\n          _MiniKit.walletAddress = payload.address;\n          _MiniKit.getUserByAddress(payload.address).then((user) => {\n            _MiniKit.user = user;\n          });\n        }\n        originalHandler(payload);\n      };\n      this.listeners[event] = wrappedHandler;\n    } else if (event === \"miniapp-verify-action\" /* MiniAppVerifyAction */) {\n      const originalHandler = handler;\n      const wrappedHandler = (payload) => {\n        if (payload.status === \"success\" && payload.verification_level === _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb) {\n          compressAndPadProof(payload.proof).then(\n            (compressedProof) => {\n              payload.proof = compressedProof;\n              originalHandler(payload);\n            }\n          );\n        } else {\n          originalHandler(payload);\n        }\n      };\n      this.listeners[event] = wrappedHandler;\n    } else {\n      this.listeners[event] = handler;\n    }\n  }\n  static unsubscribe(event) {\n    delete this.listeners[event];\n  }\n  static trigger(event, payload) {\n    if (!this.listeners[event]) {\n      console.error(`No handler for event ${event}`);\n      return;\n    }\n    this.listeners[event](payload);\n  }\n  static async awaitCommand(event, command, executor) {\n    return new Promise((resolve) => {\n      let commandPayload = null;\n      const handleAndUnsubscribe = (payload) => {\n        this.unsubscribe(event);\n        resolve({ commandPayload, finalPayload: payload });\n      };\n      this.subscribe(event, handleAndUnsubscribe);\n      commandPayload = executor();\n    });\n  }\n  static commandsValid(worldAppSupportedCommands) {\n    return Object.entries(this.miniKitCommandVersion).every(\n      ([minikitCommandName, version]) => {\n        const commandInput = worldAppSupportedCommands.find(\n          (command) => command.name === minikitCommandName\n        );\n        if (!commandInput) {\n          console.error(\n            `Command ${minikitCommandName} is not supported by the app. Try updating the app version`\n          );\n        } else {\n          _MiniKit.isCommandAvailable[minikitCommandName] = true;\n        }\n        return commandInput ? commandInput.supported_versions.includes(version) : false;\n      }\n    );\n  }\n  static install(appId) {\n    if (typeof window === \"undefined\" || Boolean(window.MiniKit)) {\n      return {\n        success: false,\n        errorCode: \"already_installed\" /* AlreadyInstalled */,\n        errorMessage: MiniKitInstallErrorMessage[\"already_installed\" /* AlreadyInstalled */]\n      };\n    }\n    if (!appId) {\n      console.warn(\"App ID not provided during install\");\n    } else {\n      _MiniKit.appId = appId;\n    }\n    if (!window.WorldApp) {\n      return {\n        success: false,\n        errorCode: \"outside_of_worldapp\" /* OutsideOfWorldApp */,\n        errorMessage: MiniKitInstallErrorMessage[\"outside_of_worldapp\" /* OutsideOfWorldApp */]\n      };\n    }\n    try {\n      window.MiniKit = _MiniKit;\n      this.sendInit();\n    } catch (error) {\n      console.error(\n        MiniKitInstallErrorMessage[\"unknown\" /* Unknown */],\n        error\n      );\n      return {\n        success: false,\n        errorCode: \"unknown\" /* Unknown */,\n        errorMessage: MiniKitInstallErrorMessage[\"unknown\" /* Unknown */]\n      };\n    }\n    if (!this.commandsValid(window.WorldApp.supported_commands)) {\n      return {\n        success: false,\n        errorCode: \"app_out_of_date\" /* AppOutOfDate */,\n        errorMessage: MiniKitInstallErrorMessage[\"app_out_of_date\" /* AppOutOfDate */]\n      };\n    }\n    return { success: true };\n  }\n  static isInstalled(debug) {\n    if (debug) console.log(\"MiniKit is alive!\");\n    const isInstalled = Boolean(window.MiniKit);\n    if (!isInstalled)\n      console.error(\n        \"MiniKit is not installed. Make sure you're running the application inside of World App\"\n      );\n    return isInstalled;\n  }\n};\n_MiniKit.MINIKIT_VERSION = 1;\n_MiniKit.miniKitCommandVersion = {\n  [\"verify\" /* Verify */]: 1,\n  [\"pay\" /* Pay */]: 1,\n  [\"wallet-auth\" /* WalletAuth */]: 1,\n  [\"send-transaction\" /* SendTransaction */]: 1,\n  [\"sign-message\" /* SignMessage */]: 1,\n  [\"sign-typed-data\" /* SignTypedData */]: 1,\n  [\"share-contacts\" /* ShareContacts */]: 1,\n  [\"request-permission\" /* RequestPermission */]: 1,\n  [\"get-permissions\" /* GetPermissions */]: 1,\n  [\"send-haptic-feedback\" /* SendHapticFeedback */]: 1\n};\n_MiniKit.isCommandAvailable = {\n  [\"verify\" /* Verify */]: false,\n  [\"pay\" /* Pay */]: false,\n  [\"wallet-auth\" /* WalletAuth */]: false,\n  [\"send-transaction\" /* SendTransaction */]: false,\n  [\"sign-message\" /* SignMessage */]: false,\n  [\"sign-typed-data\" /* SignTypedData */]: false,\n  [\"share-contacts\" /* ShareContacts */]: false,\n  [\"request-permission\" /* RequestPermission */]: false,\n  [\"get-permissions\" /* GetPermissions */]: false,\n  [\"send-haptic-feedback\" /* SendHapticFeedback */]: false\n};\n_MiniKit.listeners = {\n  [\"miniapp-verify-action\" /* MiniAppVerifyAction */]: () => {\n  },\n  [\"miniapp-payment\" /* MiniAppPayment */]: () => {\n  },\n  [\"miniapp-wallet-auth\" /* MiniAppWalletAuth */]: () => {\n  },\n  [\"miniapp-send-transaction\" /* MiniAppSendTransaction */]: () => {\n  },\n  [\"miniapp-sign-message\" /* MiniAppSignMessage */]: () => {\n  },\n  [\"miniapp-sign-typed-data\" /* MiniAppSignTypedData */]: () => {\n  },\n  [\"miniapp-share-contacts\" /* MiniAppShareContacts */]: () => {\n  },\n  [\"miniapp-request-permission\" /* MiniAppRequestPermission */]: () => {\n  },\n  [\"miniapp-get-permissions\" /* MiniAppGetPermissions */]: () => {\n  },\n  [\"miniapp-send-haptic-feedback\" /* MiniAppSendHapticFeedback */]: () => {\n  }\n};\n_MiniKit.appId = null;\n/**\n * @deprecated you should use MiniKit.user.walletAddress instead\n */\n_MiniKit.walletAddress = null;\n_MiniKit.user = null;\n_MiniKit.getUserByAddress = async (address) => {\n  const userProfile = await getUserProfile(address);\n  return {\n    walletAddress: address,\n    username: userProfile.username,\n    profilePictureUrl: userProfile.profilePictureUrl\n  };\n};\n_MiniKit.commands = {\n  verify: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"verify\" /* Verify */]) {\n      console.error(\n        \"'verify' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n    const eventPayload = {\n      action: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__.encodeAction)(payload.action),\n      signal: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__.generateSignal)(payload.signal).digest,\n      verification_level: payload.verification_level || _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb,\n      timestamp\n    };\n    sendMiniKitEvent({\n      command: \"verify\" /* Verify */,\n      version: _MiniKit.miniKitCommandVersion[\"verify\" /* Verify */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  pay: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"pay\" /* Pay */]) {\n      console.error(\n        \"'pay' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    if (!validatePaymentPayload(payload)) {\n      return null;\n    }\n    const network = \"worldchain\" /* WorldChain */;\n    const eventPayload = {\n      ...payload,\n      network\n    };\n    sendMiniKitEvent({\n      command: \"pay\" /* Pay */,\n      version: _MiniKit.miniKitCommandVersion[\"pay\" /* Pay */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  walletAuth: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"wallet-auth\" /* WalletAuth */]) {\n      console.error(\n        \"'walletAuth' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const validationResult = validateWalletAuthCommandInput(payload);\n    if (!validationResult.valid) {\n      console.error(\n        \"Failed to validate wallet auth input:\\n\\n -->\",\n        validationResult.message\n      );\n      return null;\n    }\n    let protocol = null;\n    try {\n      const currentUrl = new URL(window.location.href);\n      protocol = currentUrl.protocol.split(\":\")[0];\n    } catch (error) {\n      console.error(\"Failed to get current URL\", error);\n      return null;\n    }\n    const siweMessage = generateSiweMessage({\n      scheme: protocol,\n      domain: window.location.host,\n      statement: payload.statement ?? void 0,\n      uri: window.location.href,\n      version: 1,\n      chain_id: 480,\n      nonce: payload.nonce,\n      issued_at: (/* @__PURE__ */ new Date()).toISOString(),\n      expiration_time: payload.expirationTime?.toISOString() ?? void 0,\n      not_before: payload.notBefore?.toISOString() ?? void 0,\n      request_id: payload.requestId ?? void 0\n    });\n    const walletAuthPayload = { siweMessage };\n    sendMiniKitEvent({\n      command: \"wallet-auth\" /* WalletAuth */,\n      version: _MiniKit.miniKitCommandVersion[\"wallet-auth\" /* WalletAuth */],\n      payload: walletAuthPayload\n    });\n    return walletAuthPayload;\n  },\n  sendTransaction: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"send-transaction\" /* SendTransaction */]) {\n      console.error(\n        \"'sendTransaction' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const validatedPayload = validateSendTransactionPayload(payload);\n    sendMiniKitEvent({\n      command: \"send-transaction\" /* SendTransaction */,\n      version: _MiniKit.miniKitCommandVersion[\"send-transaction\" /* SendTransaction */],\n      payload: validatedPayload\n    });\n    return validatedPayload;\n  },\n  signMessage: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-message\" /* SignMessage */]) {\n      console.error(\n        \"'signMessage' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-message\" /* SignMessage */,\n      version: _MiniKit.miniKitCommandVersion[\"sign-message\" /* SignMessage */],\n      payload\n    });\n    return payload;\n  },\n  signTypedData: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'signTypedData' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-typed-data\" /* SignTypedData */,\n      version: _MiniKit.miniKitCommandVersion[\"sign-typed-data\" /* SignTypedData */],\n      payload\n    });\n    return payload;\n  },\n  shareContacts: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'shareContacts' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"share-contacts\" /* ShareContacts */,\n      version: _MiniKit.miniKitCommandVersion[\"share-contacts\" /* ShareContacts */],\n      payload\n    });\n    return payload;\n  },\n  requestPermission: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"request-permission\" /* RequestPermission */]) {\n      console.error(\n        \"'requestPermission' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"request-permission\" /* RequestPermission */,\n      version: _MiniKit.miniKitCommandVersion[\"request-permission\" /* RequestPermission */],\n      payload\n    });\n    return payload;\n  },\n  getPermissions: () => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"get-permissions\" /* GetPermissions */]) {\n      console.error(\n        \"'getPermissions' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"get-permissions\" /* GetPermissions */,\n      version: _MiniKit.miniKitCommandVersion[\"get-permissions\" /* GetPermissions */],\n      payload: {}\n    });\n    return {\n      status: \"sent\"\n    };\n  },\n  sendHapticFeedback: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"send-haptic-feedback\" /* SendHapticFeedback */]) {\n      console.error(\n        \"'sendHapticFeedback' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"send-haptic-feedback\" /* SendHapticFeedback */,\n      version: _MiniKit.miniKitCommandVersion[\"send-haptic-feedback\" /* SendHapticFeedback */],\n      payload\n    });\n    return payload;\n  }\n};\n/**\n * This object contains async versions of all the commands.\n * Instead of using event listeners, you can just `await` these.\n *\n * They return a standardized object\n *\n * commandPayload - object returned by the command function\n *\n * finalPayload - object returned by the event listener, or in other words, WorldApp response\n */\n_MiniKit.commandsAsync = {\n  verify: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-verify-action\" /* MiniAppVerifyAction */,\n          \"verify\" /* Verify */,\n          () => _MiniKit.commands.verify(payload)\n        );\n        if (response.finalPayload.status === \"success\" && response.finalPayload.verification_level === _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb) {\n          response.finalPayload.proof = await compressAndPadProof(\n            response.finalPayload.proof\n          );\n        }\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  pay: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-payment\" /* MiniAppPayment */,\n          \"pay\" /* Pay */,\n          () => _MiniKit.commands.pay(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  walletAuth: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-wallet-auth\" /* MiniAppWalletAuth */,\n          \"wallet-auth\" /* WalletAuth */,\n          () => _MiniKit.commands.walletAuth(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  sendTransaction: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-send-transaction\" /* MiniAppSendTransaction */,\n          \"send-transaction\" /* SendTransaction */,\n          () => _MiniKit.commands.sendTransaction(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signMessage: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-message\" /* MiniAppSignMessage */,\n          \"sign-message\" /* SignMessage */,\n          () => _MiniKit.commands.signMessage(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signTypedData: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-typed-data\" /* MiniAppSignTypedData */,\n          \"sign-typed-data\" /* SignTypedData */,\n          () => _MiniKit.commands.signTypedData(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  shareContacts: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-share-contacts\" /* MiniAppShareContacts */,\n          \"share-contacts\" /* ShareContacts */,\n          () => _MiniKit.commands.shareContacts(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  requestPermission: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-request-permission\" /* MiniAppRequestPermission */,\n          \"request-permission\" /* RequestPermission */,\n          () => _MiniKit.commands.requestPermission(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  getPermissions: async () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-get-permissions\" /* MiniAppGetPermissions */,\n          \"get-permissions\" /* GetPermissions */,\n          () => _MiniKit.commands.getPermissions()\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  sendHapticFeedback: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-send-haptic-feedback\" /* MiniAppSendHapticFeedback */,\n          \"send-haptic-feedback\" /* SendHapticFeedback */,\n          () => _MiniKit.commands.sendHapticFeedback(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n};\nvar MiniKit = _MiniKit;\n\n// index.ts\n\n\n\n// helpers/address-book/index.ts\n\n\nvar worldIdAddressBookContractAddress = \"0x57b930D551e677CC36e2fA036Ae2fe8FdaE0330D\";\nvar addressVerifiedUntilAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    name: \"addressVerifiedUntil\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar getIsUserVerified = async (walletAddress, rpcUrl) => {\n  const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_2__.createPublicClient)({\n    chain: viem_chains__WEBPACK_IMPORTED_MODULE_3__.worldchain,\n    transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.http)(\n      rpcUrl || \"https://worldchain-mainnet.g.alchemy.com/public\"\n    )\n  });\n  try {\n    const verifiedUntilResponse = await publicClient.readContract({\n      address: worldIdAddressBookContractAddress,\n      abi: addressVerifiedUntilAbi,\n      functionName: \"addressVerifiedUntil\",\n      args: [walletAddress]\n    });\n    const verifiedUntil = Number(verifiedUntilResponse.toString());\n    if (!Number.isFinite(verifiedUntil)) {\n      console.warn(\"Invalid verifiedUntil value:\", verifiedUntil);\n      return false;\n    }\n    const currentTime = Math.floor(Date.now() / 1e3);\n    return verifiedUntil > currentTime;\n  } catch (error) {\n    console.error(\"Error verifying user:\", error);\n    return false;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@worldcoin/minikit-js/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js":
/*!********************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAction: () => (/* binding */ encodeAction),\n/* harmony export */   generateSignal: () => (/* binding */ generateSignal),\n/* harmony export */   hashToField: () => (/* binding */ hashToField),\n/* harmony export */   packAndEncode: () => (/* binding */ packAndEncode),\n/* harmony export */   solidityEncode: () => (/* binding */ solidityEncode)\n/* harmony export */ });\n/* harmony import */ var buffer_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer/index.js */ \"(ssr)/./node_modules/buffer/index.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ox */ \"(ssr)/./node_modules/ox/_esm/core/Bytes.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ox */ \"(ssr)/./node_modules/ox/_esm/core/Hex.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ox */ \"(ssr)/./node_modules/ox/_esm/core/AbiParameters.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ox */ \"(ssr)/./node_modules/ox/_esm/core/Hash.js\");\n// src/lib/hashing.ts\n\n\nfunction hashToField(input) {\n  if (ox__WEBPACK_IMPORTED_MODULE_1__.validate(input) || ox__WEBPACK_IMPORTED_MODULE_2__.validate(input)) return hashEncodedBytes(input);\n  return hashString(input);\n}\nfunction packAndEncode(input) {\n  const [types, values] = input.reduce(\n    ([types2, values2], [type, value]) => {\n      types2.push(type);\n      values2.push(value);\n      return [types2, values2];\n    },\n    [[], []]\n  );\n  return hashEncodedBytes(ox__WEBPACK_IMPORTED_MODULE_3__.encodePacked(types, values));\n}\nfunction hashString(input) {\n  const bytesInput = buffer_index_js__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(input);\n  return hashEncodedBytes(bytesInput);\n}\nfunction hashEncodedBytes(input) {\n  const hash = BigInt(ox__WEBPACK_IMPORTED_MODULE_4__.keccak256(input, { as: \"Hex\" })) >> 8n;\n  const rawDigest = hash.toString(16);\n  return { hash, digest: `0x${rawDigest.padStart(64, \"0\")}` };\n}\nvar solidityEncode = (types, values) => {\n  if (types.length !== values.length) {\n    throw new Error(\"Types and values arrays must have the same length.\");\n  }\n  return { types, values };\n};\nvar generateSignal = (signal) => {\n  if (!signal || typeof signal === \"string\") return hashToField(signal ?? \"\");\n  return packAndEncode(signal.types.map((type, index) => [type, signal.values[index]]));\n};\nvar encodeAction = (action) => {\n  if (!action) return \"\";\n  if (typeof action === \"string\") return action;\n  return action.types.map((type, index) => `${type}(${action.values[index]})`).join(\",\");\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2NodW5rLUhaMlNRQTVWLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUN5QztBQUNZO0FBQ3JEO0FBQ0EsTUFBTSx3Q0FBYyxXQUFXLHdDQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDBCQUEwQiw0Q0FBMEI7QUFDcEQ7QUFDQTtBQUNBLHFCQUFxQixtREFBTTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUNBQWMsVUFBVSxXQUFXO0FBQ3pEO0FBQ0EsV0FBVyxtQkFBbUIsNEJBQTRCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxLQUFLLEdBQUcscUJBQXFCO0FBQzNFOztBQVFFIiwic291cmNlcyI6WyIvVXNlcnMvbWF0ZW9zYXV0b24vTWF0dGVvLVByb2plY3QvbXktYXBwL25vZGVfbW9kdWxlcy9Ad29ybGRjb2luL2lka2l0LWNvcmUvYnVpbGQvY2h1bmstSFoyU1FBNVYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9oYXNoaW5nLnRzXG5pbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBBYmlQYXJhbWV0ZXJzLCBCeXRlcywgSGV4LCBIYXNoIH0gZnJvbSBcIm94XCI7XG5mdW5jdGlvbiBoYXNoVG9GaWVsZChpbnB1dCkge1xuICBpZiAoQnl0ZXMudmFsaWRhdGUoaW5wdXQpIHx8IEhleC52YWxpZGF0ZShpbnB1dCkpIHJldHVybiBoYXNoRW5jb2RlZEJ5dGVzKGlucHV0KTtcbiAgcmV0dXJuIGhhc2hTdHJpbmcoaW5wdXQpO1xufVxuZnVuY3Rpb24gcGFja0FuZEVuY29kZShpbnB1dCkge1xuICBjb25zdCBbdHlwZXMsIHZhbHVlc10gPSBpbnB1dC5yZWR1Y2UoXG4gICAgKFt0eXBlczIsIHZhbHVlczJdLCBbdHlwZSwgdmFsdWVdKSA9PiB7XG4gICAgICB0eXBlczIucHVzaCh0eXBlKTtcbiAgICAgIHZhbHVlczIucHVzaCh2YWx1ZSk7XG4gICAgICByZXR1cm4gW3R5cGVzMiwgdmFsdWVzMl07XG4gICAgfSxcbiAgICBbW10sIFtdXVxuICApO1xuICByZXR1cm4gaGFzaEVuY29kZWRCeXRlcyhBYmlQYXJhbWV0ZXJzLmVuY29kZVBhY2tlZCh0eXBlcywgdmFsdWVzKSk7XG59XG5mdW5jdGlvbiBoYXNoU3RyaW5nKGlucHV0KSB7XG4gIGNvbnN0IGJ5dGVzSW5wdXQgPSBCdWZmZXIuZnJvbShpbnB1dCk7XG4gIHJldHVybiBoYXNoRW5jb2RlZEJ5dGVzKGJ5dGVzSW5wdXQpO1xufVxuZnVuY3Rpb24gaGFzaEVuY29kZWRCeXRlcyhpbnB1dCkge1xuICBjb25zdCBoYXNoID0gQmlnSW50KEhhc2gua2VjY2FrMjU2KGlucHV0LCB7IGFzOiBcIkhleFwiIH0pKSA+PiA4bjtcbiAgY29uc3QgcmF3RGlnZXN0ID0gaGFzaC50b1N0cmluZygxNik7XG4gIHJldHVybiB7IGhhc2gsIGRpZ2VzdDogYDB4JHtyYXdEaWdlc3QucGFkU3RhcnQoNjQsIFwiMFwiKX1gIH07XG59XG52YXIgc29saWRpdHlFbmNvZGUgPSAodHlwZXMsIHZhbHVlcykgPT4ge1xuICBpZiAodHlwZXMubGVuZ3RoICE9PSB2YWx1ZXMubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZXMgYW5kIHZhbHVlcyBhcnJheXMgbXVzdCBoYXZlIHRoZSBzYW1lIGxlbmd0aC5cIik7XG4gIH1cbiAgcmV0dXJuIHsgdHlwZXMsIHZhbHVlcyB9O1xufTtcbnZhciBnZW5lcmF0ZVNpZ25hbCA9IChzaWduYWwpID0+IHtcbiAgaWYgKCFzaWduYWwgfHwgdHlwZW9mIHNpZ25hbCA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGhhc2hUb0ZpZWxkKHNpZ25hbCA/PyBcIlwiKTtcbiAgcmV0dXJuIHBhY2tBbmRFbmNvZGUoc2lnbmFsLnR5cGVzLm1hcCgodHlwZSwgaW5kZXgpID0+IFt0eXBlLCBzaWduYWwudmFsdWVzW2luZGV4XV0pKTtcbn07XG52YXIgZW5jb2RlQWN0aW9uID0gKGFjdGlvbikgPT4ge1xuICBpZiAoIWFjdGlvbikgcmV0dXJuIFwiXCI7XG4gIGlmICh0eXBlb2YgYWN0aW9uID09PSBcInN0cmluZ1wiKSByZXR1cm4gYWN0aW9uO1xuICByZXR1cm4gYWN0aW9uLnR5cGVzLm1hcCgodHlwZSwgaW5kZXgpID0+IGAke3R5cGV9KCR7YWN0aW9uLnZhbHVlc1tpbmRleF19KWApLmpvaW4oXCIsXCIpO1xufTtcblxuZXhwb3J0IHtcbiAgaGFzaFRvRmllbGQsXG4gIHBhY2tBbmRFbmNvZGUsXG4gIHNvbGlkaXR5RW5jb2RlLFxuICBnZW5lcmF0ZVNpZ25hbCxcbiAgZW5jb2RlQWN0aW9uXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/idkit-core/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppErrorCodes: () => (/* binding */ AppErrorCodes),\n/* harmony export */   CredentialType: () => (/* binding */ CredentialType),\n/* harmony export */   DEFAULT_VERIFICATION_LEVEL: () => (/* binding */ DEFAULT_VERIFICATION_LEVEL),\n/* harmony export */   VerificationLevel: () => (/* binding */ VerificationLevel),\n/* harmony export */   VerificationState: () => (/* binding */ VerificationState),\n/* harmony export */   useWorldBridgeStore: () => (/* binding */ useWorldBridgeStore),\n/* harmony export */   verification_level_to_credential_types: () => (/* binding */ verification_level_to_credential_types)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-HZ2SQA5V.js */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand */ \"(ssr)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var buffer_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer/index.js */ \"(ssr)/./node_modules/buffer/index.js\");\n\n\n// src/types/bridge.ts\nvar AppErrorCodes = /* @__PURE__ */ ((AppErrorCodes2) => {\n  AppErrorCodes2[\"ConnectionFailed\"] = \"connection_failed\";\n  AppErrorCodes2[\"VerificationRejected\"] = \"verification_rejected\";\n  AppErrorCodes2[\"MaxVerificationsReached\"] = \"max_verifications_reached\";\n  AppErrorCodes2[\"CredentialUnavailable\"] = \"credential_unavailable\";\n  AppErrorCodes2[\"MalformedRequest\"] = \"malformed_request\";\n  AppErrorCodes2[\"InvalidNetwork\"] = \"invalid_network\";\n  AppErrorCodes2[\"InclusionProofFailed\"] = \"inclusion_proof_failed\";\n  AppErrorCodes2[\"InclusionProofPending\"] = \"inclusion_proof_pending\";\n  AppErrorCodes2[\"UnexpectedResponse\"] = \"unexpected_response\";\n  AppErrorCodes2[\"FailedByHostApp\"] = \"failed_by_host_app\";\n  AppErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return AppErrorCodes2;\n})(AppErrorCodes || {});\nvar VerificationState = /* @__PURE__ */ ((VerificationState2) => {\n  VerificationState2[\"PreparingClient\"] = \"loading_widget\";\n  VerificationState2[\"WaitingForConnection\"] = \"awaiting_connection\";\n  VerificationState2[\"WaitingForApp\"] = \"awaiting_app\";\n  VerificationState2[\"Confirmed\"] = \"confirmed\";\n  VerificationState2[\"Failed\"] = \"failed\";\n  return VerificationState2;\n})(VerificationState || {});\n\n// src/types/config.ts\nvar CredentialType = /* @__PURE__ */ ((CredentialType2) => {\n  CredentialType2[\"Orb\"] = \"orb\";\n  CredentialType2[\"SecureDocument\"] = \"secure_document\";\n  CredentialType2[\"Document\"] = \"document\";\n  CredentialType2[\"Device\"] = \"device\";\n  return CredentialType2;\n})(CredentialType || {});\nvar VerificationLevel = /* @__PURE__ */ ((VerificationLevel2) => {\n  VerificationLevel2[\"Orb\"] = \"orb\";\n  VerificationLevel2[\"SecureDocument\"] = \"secure_document\";\n  VerificationLevel2[\"Document\"] = \"document\";\n  VerificationLevel2[\"Device\"] = \"device\";\n  return VerificationLevel2;\n})(VerificationLevel || {});\n\n// src/bridge.ts\n\n\n// src/lib/validation.ts\nfunction validate_bridge_url(bridge_url, is_staging) {\n  try {\n    new URL(bridge_url);\n  } catch (e) {\n    return { valid: false, errors: [\"Failed to parse Bridge URL.\"] };\n  }\n  const test_url = new URL(bridge_url);\n  const errors = [];\n  if (is_staging && [\"localhost\", \"127.0.0.1\"].includes(test_url.hostname)) {\n    console.log(\"Using staging app_id with localhost bridge_url. Skipping validation.\");\n    return { valid: true };\n  }\n  if (test_url.protocol !== \"https:\") {\n    errors.push(\"Bridge URL must use HTTPS.\");\n  }\n  if (test_url.port) {\n    errors.push(\"Bridge URL must use the default port (443).\");\n  }\n  if (test_url.pathname !== \"/\") {\n    errors.push(\"Bridge URL must not have a path.\");\n  }\n  if (test_url.search) {\n    errors.push(\"Bridge URL must not have query parameters.\");\n  }\n  if (test_url.hash) {\n    errors.push(\"Bridge URL must not have a fragment.\");\n  }\n  if (!test_url.hostname.endsWith(\".worldcoin.org\") && !test_url.hostname.endsWith(\".toolsforhumanity.com\")) {\n    console.warn(\n      \"Bridge URL should be a subdomain of worldcoin.org or toolsforhumanity.com. The user's identity wallet may refuse to connect. This is a temporary measure and may be removed in the future.\"\n    );\n  }\n  if (errors.length) {\n    return { valid: false, errors };\n  }\n  return { valid: true };\n}\n\n// src/lib/utils.ts\n\nvar DEFAULT_VERIFICATION_LEVEL = \"orb\" /* Orb */;\nvar buffer_encode = (buffer) => {\n  return buffer_index_js__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(buffer).toString(\"base64\");\n};\nvar buffer_decode = (encoded) => {\n  return buffer_index_js__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(encoded, \"base64\");\n};\nvar verification_level_to_credential_types = (verification_level) => {\n  switch (verification_level) {\n    case \"device\" /* Device */:\n      return [\"orb\" /* Orb */, \"device\" /* Device */];\n    case \"document\" /* Document */:\n      return [\"document\" /* Document */, \"secure_document\" /* SecureDocument */, \"orb\" /* Orb */];\n    case \"secure_document\" /* SecureDocument */:\n      return [\"secure_document\" /* SecureDocument */, \"orb\" /* Orb */];\n    case \"orb\" /* Orb */:\n      return [\"orb\" /* Orb */];\n    default:\n      throw new Error(`Unknown verification level: ${verification_level}`);\n  }\n};\nvar credential_type_to_verification_level = (credential_type) => {\n  switch (credential_type) {\n    case \"orb\" /* Orb */:\n      return \"orb\" /* Orb */;\n    case \"secure_document\" /* SecureDocument */:\n      return \"secure_document\" /* SecureDocument */;\n    case \"document\" /* Document */:\n      return \"document\" /* Document */;\n    case \"device\" /* Device */:\n      return \"device\" /* Device */;\n    default:\n      throw new Error(`Unknown credential_type: ${credential_type}`);\n  }\n};\n\n// src/lib/crypto.ts\nvar encoder = new TextEncoder();\nvar decoder = new TextDecoder();\nvar generateKey = async () => {\n  return {\n    iv: window.crypto.getRandomValues(new Uint8Array(12)),\n    key: await window.crypto.subtle.generateKey({ name: \"AES-GCM\", length: 256 }, true, [\"encrypt\", \"decrypt\"])\n  };\n};\nvar exportKey = async (key) => {\n  return buffer_encode(await window.crypto.subtle.exportKey(\"raw\", key));\n};\nvar encryptRequest = async (key, iv, request) => {\n  return {\n    iv: buffer_encode(iv),\n    payload: buffer_encode(\n      await window.crypto.subtle.encrypt({ name: \"AES-GCM\", iv }, key, encoder.encode(request))\n    )\n  };\n};\nvar decryptResponse = async (key, iv, payload) => {\n  return decoder.decode(await window.crypto.subtle.decrypt({ name: \"AES-GCM\", iv }, key, buffer_decode(payload)));\n};\n\n// src/bridge.ts\nvar DEFAULT_BRIDGE_URL = \"https://bridge.worldcoin.org\";\nvar useWorldBridgeStore = (0,zustand__WEBPACK_IMPORTED_MODULE_2__.create)((set, get) => ({\n  iv: null,\n  key: null,\n  result: null,\n  errorCode: null,\n  requestId: null,\n  connectorURI: null,\n  bridge_url: DEFAULT_BRIDGE_URL,\n  verificationState: \"loading_widget\" /* PreparingClient */,\n  createClient: async ({ bridge_url, app_id, verification_level, action_description, action, signal, partner }) => {\n    const { key, iv } = await generateKey();\n    if (bridge_url) {\n      const validation = validate_bridge_url(bridge_url, app_id.includes(\"staging\"));\n      if (!validation.valid) {\n        console.error(validation.errors.join(\"\\n\"));\n        set({ verificationState: \"failed\" /* Failed */ });\n        throw new Error(\"Invalid bridge_url. Please check the console for more details.\");\n      }\n    }\n    const res = await fetch(new URL(\"/request\", bridge_url ?? DEFAULT_BRIDGE_URL), {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(\n        await encryptRequest(\n          key,\n          iv,\n          JSON.stringify({\n            app_id,\n            action_description,\n            action: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.encodeAction)(action),\n            signal: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.generateSignal)(signal).digest,\n            credential_types: verification_level_to_credential_types(\n              verification_level ?? DEFAULT_VERIFICATION_LEVEL\n            ),\n            verification_level: verification_level ?? DEFAULT_VERIFICATION_LEVEL\n          })\n        )\n      )\n    });\n    if (!res.ok) {\n      set({ verificationState: \"failed\" /* Failed */ });\n      throw new Error(\"Failed to create client\");\n    }\n    const { request_id } = await res.json();\n    set({\n      iv,\n      key,\n      requestId: request_id,\n      bridge_url: bridge_url ?? DEFAULT_BRIDGE_URL,\n      verificationState: \"awaiting_connection\" /* WaitingForConnection */,\n      connectorURI: `https://world.org/verify?t=wld&i=${request_id}&k=${encodeURIComponent(\n        await exportKey(key)\n      )}${bridge_url && bridge_url !== DEFAULT_BRIDGE_URL ? `&b=${encodeURIComponent(bridge_url)}` : \"\"}${partner ? `&partner=${encodeURIComponent(true)}` : \"\"}`\n    });\n  },\n  pollForUpdates: async () => {\n    const key = get().key;\n    if (!key) throw new Error(\"No keypair found. Please call `createClient` first.\");\n    const res = await fetch(new URL(`/response/${get().requestId}`, get().bridge_url));\n    if (!res.ok) {\n      return set({\n        errorCode: \"connection_failed\" /* ConnectionFailed */,\n        verificationState: \"failed\" /* Failed */\n      });\n    }\n    const { response, status } = await res.json();\n    if (status != \"completed\" /* Completed */) {\n      return set({\n        verificationState: status == \"retrieved\" /* Retrieved */ ? \"awaiting_app\" /* WaitingForApp */ : \"awaiting_connection\" /* WaitingForConnection */\n      });\n    }\n    let result = JSON.parse(\n      await decryptResponse(key, buffer_decode(response.iv), response.payload)\n    );\n    if (\"error_code\" in result) {\n      return set({\n        errorCode: result.error_code,\n        verificationState: \"failed\" /* Failed */\n      });\n    }\n    if (\"credential_type\" in result) {\n      result = {\n        verification_level: credential_type_to_verification_level(result.credential_type),\n        ...result\n      };\n    }\n    set({\n      result,\n      key: null,\n      requestId: null,\n      connectorURI: null,\n      verificationState: \"confirmed\" /* Confirmed */\n    });\n  },\n  reset: () => {\n    set({\n      iv: null,\n      key: null,\n      result: null,\n      errorCode: null,\n      requestId: null,\n      connectorURI: null,\n      verificationState: \"loading_widget\" /* PreparingClient */\n    });\n  }\n}));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/idkit-core/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/lib/backend.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyCloudProof: () => (/* binding */ verifyCloudProof)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-HZ2SQA5V.js */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n/* harmony import */ var browser_or_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-or-node */ \"(ssr)/./node_modules/browser-or-node/dist/index.mjs\");\n\n\n// src/lib/backend.ts\n\nasync function verifyCloudProof(proof, app_id, action, signal, endpoint) {\n  if (browser_or_node__WEBPACK_IMPORTED_MODULE_1__.isBrowser) {\n    throw new Error(\"verifyCloudProof can only be used in the backend.\");\n  }\n  const response = await fetch(endpoint ?? `https://developer.worldcoin.org/api/v2/verify/${app_id}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      ...proof,\n      action,\n      signal_hash: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.hashToField)(signal ?? \"\").digest\n    })\n  });\n  if (response.ok) {\n    return { success: true };\n  } else {\n    return { success: false, ...await response.json() };\n  }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9iYWNrZW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUU4Qjs7QUFFOUI7QUFDNEM7QUFDNUM7QUFDQSxNQUFNLHNEQUFTO0FBQ2Y7QUFDQTtBQUNBLDRGQUE0RixPQUFPO0FBQ25HO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0RBQVc7QUFDOUIsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLGFBQWE7QUFDYixJQUFJO0FBQ0osYUFBYTtBQUNiO0FBQ0E7QUFHRSIsInNvdXJjZXMiOlsiL1VzZXJzL21hdGVvc2F1dG9uL01hdHRlby1Qcm9qZWN0L215LWFwcC9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9iYWNrZW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGhhc2hUb0ZpZWxkXG59IGZyb20gXCIuLi9jaHVuay1IWjJTUUE1Vi5qc1wiO1xuXG4vLyBzcmMvbGliL2JhY2tlbmQudHNcbmltcG9ydCB7IGlzQnJvd3NlciB9IGZyb20gXCJicm93c2VyLW9yLW5vZGVcIjtcbmFzeW5jIGZ1bmN0aW9uIHZlcmlmeUNsb3VkUHJvb2YocHJvb2YsIGFwcF9pZCwgYWN0aW9uLCBzaWduYWwsIGVuZHBvaW50KSB7XG4gIGlmIChpc0Jyb3dzZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ2ZXJpZnlDbG91ZFByb29mIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIGJhY2tlbmQuXCIpO1xuICB9XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZW5kcG9pbnQgPz8gYGh0dHBzOi8vZGV2ZWxvcGVyLndvcmxkY29pbi5vcmcvYXBpL3YyL3ZlcmlmeS8ke2FwcF9pZH1gLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgLi4ucHJvb2YsXG4gICAgICBhY3Rpb24sXG4gICAgICBzaWduYWxfaGFzaDogaGFzaFRvRmllbGQoc2lnbmFsID8/IFwiXCIpLmRpZ2VzdFxuICAgIH0pXG4gIH0pO1xuICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIC4uLmF3YWl0IHJlc3BvbnNlLmpzb24oKSB9O1xuICB9XG59XG5leHBvcnQge1xuICB2ZXJpZnlDbG91ZFByb29mXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/lib/hashing.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAction: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.encodeAction),\n/* harmony export */   generateSignal: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.generateSignal),\n/* harmony export */   hashToField: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.hashToField),\n/* harmony export */   packAndEncode: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.packAndEncode),\n/* harmony export */   solidityEncode: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.solidityEncode)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-HZ2SQA5V.js */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9oYXNoaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQU04QjtBQU81QiIsInNvdXJjZXMiOlsiL1VzZXJzL21hdGVvc2F1dG9uL01hdHRlby1Qcm9qZWN0L215LWFwcC9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9oYXNoaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGVuY29kZUFjdGlvbixcbiAgZ2VuZXJhdGVTaWduYWwsXG4gIGhhc2hUb0ZpZWxkLFxuICBwYWNrQW5kRW5jb2RlLFxuICBzb2xpZGl0eUVuY29kZVxufSBmcm9tIFwiLi4vY2h1bmstSFoyU1FBNVYuanNcIjtcbmV4cG9ydCB7XG4gIGVuY29kZUFjdGlvbixcbiAgZ2VuZXJhdGVTaWduYWwsXG4gIGhhc2hUb0ZpZWxkLFxuICBwYWNrQW5kRW5jb2RlLFxuICBzb2xpZGl0eUVuY29kZVxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/minikit-js/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@worldcoin/minikit-js/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command),\n/* harmony export */   GetPermissionsErrorCodes: () => (/* binding */ GetPermissionsErrorCodes),\n/* harmony export */   GetPermissionsErrorMessage: () => (/* binding */ GetPermissionsErrorMessage),\n/* harmony export */   MiniKit: () => (/* binding */ MiniKit),\n/* harmony export */   MiniKitInstallErrorCodes: () => (/* binding */ MiniKitInstallErrorCodes),\n/* harmony export */   MiniKitInstallErrorMessage: () => (/* binding */ MiniKitInstallErrorMessage),\n/* harmony export */   Network: () => (/* binding */ Network),\n/* harmony export */   PaymentErrorCodes: () => (/* binding */ PaymentErrorCodes),\n/* harmony export */   PaymentErrorMessage: () => (/* binding */ PaymentErrorMessage),\n/* harmony export */   PaymentValidationErrors: () => (/* binding */ PaymentValidationErrors),\n/* harmony export */   Permission: () => (/* binding */ Permission),\n/* harmony export */   RequestPermissionErrorCodes: () => (/* binding */ RequestPermissionErrorCodes),\n/* harmony export */   RequestPermissionErrorMessage: () => (/* binding */ RequestPermissionErrorMessage),\n/* harmony export */   ResponseEvent: () => (/* binding */ ResponseEvent),\n/* harmony export */   SAFE_CONTRACT_ABI: () => (/* binding */ SAFE_CONTRACT_ABI),\n/* harmony export */   SendHapticFeedbackErrorCodes: () => (/* binding */ SendHapticFeedbackErrorCodes),\n/* harmony export */   SendHapticFeedbackErrorMessage: () => (/* binding */ SendHapticFeedbackErrorMessage),\n/* harmony export */   SendTransactionErrorCodes: () => (/* binding */ SendTransactionErrorCodes),\n/* harmony export */   SendTransactionErrorMessage: () => (/* binding */ SendTransactionErrorMessage),\n/* harmony export */   ShareContactsErrorCodes: () => (/* binding */ ShareContactsErrorCodes),\n/* harmony export */   ShareContactsErrorMessage: () => (/* binding */ ShareContactsErrorMessage),\n/* harmony export */   SignMessageErrorCodes: () => (/* binding */ SignMessageErrorCodes),\n/* harmony export */   SignMessageErrorMessage: () => (/* binding */ SignMessageErrorMessage),\n/* harmony export */   SignTypedDataErrorCodes: () => (/* binding */ SignTypedDataErrorCodes),\n/* harmony export */   SignTypedDataErrorMessage: () => (/* binding */ SignTypedDataErrorMessage),\n/* harmony export */   TokenDecimals: () => (/* binding */ TokenDecimals),\n/* harmony export */   Tokens: () => (/* binding */ Tokens),\n/* harmony export */   VerificationErrorCodes: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes),\n/* harmony export */   VerificationErrorMessage: () => (/* binding */ VerificationErrorMessage),\n/* harmony export */   VerificationLevel: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel),\n/* harmony export */   WalletAuthErrorCodes: () => (/* binding */ WalletAuthErrorCodes),\n/* harmony export */   WalletAuthErrorMessage: () => (/* binding */ WalletAuthErrorMessage),\n/* harmony export */   getIsUserVerified: () => (/* binding */ getIsUserVerified),\n/* harmony export */   parseSiweMessage: () => (/* binding */ parseSiweMessage),\n/* harmony export */   tokenToDecimals: () => (/* binding */ tokenToDecimals),\n/* harmony export */   verifyCloudProof: () => (/* reexport safe */ _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_10__.verifyCloudProof),\n/* harmony export */   verifySiweMessage: () => (/* binding */ verifySiweMessage)\n/* harmony export */ });\n/* harmony import */ var _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @worldcoin/idkit-core */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/index.js\");\n/* harmony import */ var _worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @worldcoin/idkit-core/hashing */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createPublicClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/http.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/worldchain.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/signature/hashMessage.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/actions/getContract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/signature/recoverAddress.js\");\n/* harmony import */ var _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @worldcoin/idkit-core/backend */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js\");\n// minikit.ts\n\n\n\n// types/payment.ts\nvar Tokens = /* @__PURE__ */ ((Tokens3) => {\n  Tokens3[\"USDCE\"] = \"USDCE\";\n  Tokens3[\"WLD\"] = \"WLD\";\n  return Tokens3;\n})(Tokens || {});\nvar TokenDecimals = {\n  [\"USDCE\" /* USDCE */]: 6,\n  [\"WLD\" /* WLD */]: 18\n};\nvar Network = /* @__PURE__ */ ((Network2) => {\n  Network2[\"Optimism\"] = \"optimism\";\n  Network2[\"WorldChain\"] = \"worldchain\";\n  return Network2;\n})(Network || {});\n\n// helpers/payment/client.ts\nvar tokenToDecimals = (amount, token) => {\n  const decimals = TokenDecimals[token];\n  if (decimals === void 0) {\n    throw new Error(`Invalid token: ${token}`);\n  }\n  const factor = 10 ** decimals;\n  const result = amount * factor;\n  if (!Number.isInteger(result)) {\n    throw new Error(`The resulting amount is not a whole number: ${result}`);\n  }\n  return result;\n};\nvar validatePaymentPayload = (payload) => {\n  if (payload.tokens.some(\n    (token) => token.symbol == \"USDCE\" && parseFloat(token.token_amount) < 0.1\n  )) {\n    console.error(\"USDCE amount should be greater than $0.1\");\n    return false;\n  }\n  if (payload.reference.length > 36) {\n    console.error(\"Reference must not exceed 36 characters\");\n    return false;\n  }\n  if (typeof payload.reference !== \"string\") {\n    throw new Error(\"Reference must be a string\");\n  }\n  return true;\n};\n\n// helpers/proof/index.ts\n\n\nvar semaphoreVerifierAddress = \"0x79f46b94d134109EbcbbddBAeD0E88790409A0e4\";\nvar semaphoreVerifierAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256[8]\",\n        name: \"proof\",\n        type: \"uint256[8]\"\n      }\n    ],\n    name: \"compressProof\",\n    outputs: [\n      {\n        internalType: \"uint256[4]\",\n        name: \"compressed\",\n        type: \"uint256[4]\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar compressAndPadProof = async (proof, rpcUrl) => {\n  try {\n    const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_2__.createPublicClient)({\n      chain: viem_chains__WEBPACK_IMPORTED_MODULE_3__.worldchain,\n      transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.http)(\n        rpcUrl || \"https://worldchain-mainnet.g.alchemy.com/public\"\n      )\n    });\n    const decodedProof = (0,viem__WEBPACK_IMPORTED_MODULE_5__.decodeAbiParameters)(\n      [{ type: \"uint256[8]\" }],\n      proof\n    )[0];\n    const compressedProof = await publicClient.readContract({\n      address: semaphoreVerifierAddress,\n      abi: semaphoreVerifierAbi,\n      functionName: \"compressProof\",\n      args: [decodedProof]\n    });\n    const paddedProof = [...compressedProof, 0n, 0n, 0n, 0n];\n    return (0,viem__WEBPACK_IMPORTED_MODULE_6__.encodeAbiParameters)([{ type: \"uint256[8]\" }], [paddedProof]);\n  } catch (e) {\n    console.log(\"Failed to compress proof\", {\n      e,\n      proof\n    });\n    return proof;\n  }\n};\n\n// helpers/siwe/siwe.ts\n\n\nvar PREAMBLE = \" wants you to sign in with your Ethereum account:\";\nvar URI_TAG = \"URI: \";\nvar VERSION_TAG = \"Version: \";\nvar CHAIN_TAG = \"Chain ID: \";\nvar NONCE_TAG = \"Nonce: \";\nvar IAT_TAG = \"Issued At: \";\nvar EXP_TAG = \"Expiration Time: \";\nvar NBF_TAG = \"Not Before: \";\nvar RID_TAG = \"Request ID: \";\nvar ERC_191_PREFIX = \"\u0019Ethereum Signed Message:\\n\";\nvar tagged = (line, tag) => {\n  if (line && line.includes(tag)) {\n    return line.replace(tag, \"\");\n  } else {\n    throw new Error(`Missing '${tag}'`);\n  }\n};\nvar parseSiweMessage = (inputString) => {\n  const lines = inputString.split(\"\\n\")[Symbol.iterator]();\n  const domain = tagged(lines.next()?.value, PREAMBLE);\n  const address = lines.next()?.value;\n  lines.next();\n  const nextValue = lines.next()?.value;\n  let statement;\n  if (nextValue) {\n    statement = nextValue;\n    lines.next();\n  }\n  const uri = tagged(lines.next()?.value, URI_TAG);\n  const version = tagged(lines.next()?.value, VERSION_TAG);\n  const chain_id = tagged(lines.next()?.value, CHAIN_TAG);\n  const nonce = tagged(lines.next()?.value, NONCE_TAG);\n  const issued_at = tagged(lines.next()?.value, IAT_TAG);\n  let expiration_time, not_before, request_id;\n  for (let line of lines) {\n    if (line.startsWith(EXP_TAG)) {\n      expiration_time = tagged(line, EXP_TAG);\n    } else if (line.startsWith(NBF_TAG)) {\n      not_before = tagged(line, NBF_TAG);\n    } else if (line.startsWith(RID_TAG)) {\n      request_id = tagged(line, RID_TAG);\n    }\n  }\n  if (lines.next().done === false) {\n    throw new Error(\"Extra lines in the input\");\n  }\n  const siweMessageData = {\n    domain,\n    address,\n    statement,\n    uri,\n    version,\n    chain_id,\n    nonce,\n    issued_at,\n    expiration_time,\n    not_before,\n    request_id\n  };\n  return siweMessageData;\n};\nvar generateSiweMessage = (siweMessageData) => {\n  let siweMessage = \"\";\n  if (siweMessageData.scheme) {\n    siweMessage += `${siweMessageData.scheme}://${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  } else {\n    siweMessage += `${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  }\n  if (siweMessageData.address) {\n    siweMessage += `${siweMessageData.address}\n`;\n  } else {\n    siweMessage += \"{address}\\n\";\n  }\n  siweMessage += \"\\n\";\n  if (siweMessageData.statement) {\n    siweMessage += `${siweMessageData.statement}\n`;\n  }\n  siweMessage += \"\\n\";\n  siweMessage += `URI: ${siweMessageData.uri}\n`;\n  siweMessage += `Version: ${siweMessageData.version}\n`;\n  siweMessage += `Chain ID: ${siweMessageData.chain_id}\n`;\n  siweMessage += `Nonce: ${siweMessageData.nonce}\n`;\n  siweMessage += `Issued At: ${siweMessageData.issued_at}\n`;\n  if (siweMessageData.expiration_time) {\n    siweMessage += `Expiration Time: ${siweMessageData.expiration_time}\n`;\n  }\n  if (siweMessageData.not_before) {\n    siweMessage += `Not Before: ${siweMessageData.not_before}\n`;\n  }\n  if (siweMessageData.request_id) {\n    siweMessage += `Request ID: ${siweMessageData.request_id}\n`;\n  }\n  return siweMessage;\n};\nvar SAFE_CONTRACT_ABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"isOwner\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar verifySiweMessage = async (payload, nonce, statement, requestId, userProvider) => {\n  if (typeof window !== \"undefined\") {\n    throw new Error(\"Verify can only be called in the backend\");\n  }\n  const { message, signature, address } = payload;\n  const siweMessageData = parseSiweMessage(message);\n  if (siweMessageData.expiration_time) {\n    const expirationTime = new Date(siweMessageData.expiration_time);\n    if (expirationTime < /* @__PURE__ */ new Date()) {\n      throw new Error(\"Expired message\");\n    }\n  }\n  if (siweMessageData.not_before) {\n    const notBefore = new Date(siweMessageData.not_before);\n    if (notBefore > /* @__PURE__ */ new Date()) {\n      throw new Error(\"Not Before time has not passed\");\n    }\n  }\n  if (nonce && siweMessageData.nonce !== nonce) {\n    throw new Error(\n      `Nonce mismatch. Got: ${siweMessageData.nonce}, Expected: ${nonce}`\n    );\n  }\n  if (statement && siweMessageData.statement !== statement) {\n    throw new Error(\n      `Statement mismatch. Got: ${siweMessageData.statement}, Expected: ${statement}`\n    );\n  }\n  if (requestId && siweMessageData.request_id !== requestId) {\n    throw new Error(\n      `Request ID mismatch. Got: ${siweMessageData.request_id}, Expected: ${requestId}`\n    );\n  }\n  let provider = userProvider || (0,viem__WEBPACK_IMPORTED_MODULE_2__.createPublicClient)({ chain: viem_chains__WEBPACK_IMPORTED_MODULE_3__.worldchain, transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.http)() });\n  const signedMessage = `${ERC_191_PREFIX}${message.length}${message}`;\n  const hashedMessage = (0,viem__WEBPACK_IMPORTED_MODULE_7__.hashMessage)(signedMessage);\n  const contract = (0,viem__WEBPACK_IMPORTED_MODULE_8__.getContract)({\n    address,\n    abi: SAFE_CONTRACT_ABI,\n    client: provider\n  });\n  try {\n    const recoveredAddress = await (0,viem__WEBPACK_IMPORTED_MODULE_9__.recoverAddress)({\n      hash: hashedMessage,\n      signature: `0x${signature}`\n    });\n    const isOwner = await contract.read.isOwner([recoveredAddress]);\n    if (!isOwner) {\n      throw new Error(\"Signature verification failed, invalid owner\");\n    }\n  } catch (error) {\n    throw new Error(\"Signature verification failed\");\n  }\n  return { isValid: true, siweMessageData };\n};\n\n// helpers/siwe/validate-wallet-auth-command-input.ts\nvar validateWalletAuthCommandInput = (params) => {\n  if (!params.nonce) {\n    return { valid: false, message: \"'nonce' is required\" };\n  }\n  if (params.nonce.length < 8) {\n    return { valid: false, message: \"'nonce' must be at least 8 characters\" };\n  }\n  if (params.statement && params.statement.includes(\"\\n\")) {\n    return { valid: false, message: \"'statement' must not contain newlines\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) < /* @__PURE__ */ new Date()) {\n    return { valid: false, message: \"'expirationTime' must be in the future\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'expirationTime' must be within 7 days\" };\n  }\n  if (params.notBefore && new Date(params.notBefore) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'notBefore' must be within 7 days\" };\n  }\n  return { valid: true };\n};\n\n// helpers/transaction/validate-payload.ts\nvar isValidHex = (str) => {\n  return /^0x[0-9A-Fa-f]+$/.test(str);\n};\nvar processPayload = (payload) => {\n  if (typeof payload === \"boolean\" || typeof payload === \"string\" || payload === null || payload === void 0) {\n    return payload;\n  }\n  if (typeof payload === \"number\" || typeof payload === \"bigint\") {\n    return String(payload);\n  }\n  if (Array.isArray(payload)) {\n    return payload.map((value) => processPayload(value));\n  }\n  if (typeof payload === \"object\") {\n    const result = { ...payload };\n    if (\"value\" in result && result.value !== void 0) {\n      if (typeof result.value !== \"string\") {\n        result.value = String(result.value);\n      }\n      if (!isValidHex(result.value)) {\n        console.error(\n          \"Transaction value must be a valid hex string\",\n          result.value\n        );\n        throw new Error(\n          `Transaction value must be a valid hex string: ${result.value}`\n        );\n      }\n    }\n    for (const key in result) {\n      if (Object.prototype.hasOwnProperty.call(result, key)) {\n        result[key] = processPayload(result[key]);\n      }\n    }\n    return result;\n  }\n  return payload;\n};\nvar validateSendTransactionPayload = (payload) => {\n  return processPayload(payload);\n};\n\n// helpers/usernames/index.ts\nvar getUserProfile = async (address) => {\n  const res = await fetch(\"https://usernames.worldcoin.org/api/v1/query\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      addresses: [address]\n    })\n  });\n  const usernames = await res.json();\n  return usernames?.[0] ?? { username: null, profilePictureUrl: null };\n};\n\n// types/commands.ts\nvar Command = /* @__PURE__ */ ((Command2) => {\n  Command2[\"Verify\"] = \"verify\";\n  Command2[\"Pay\"] = \"pay\";\n  Command2[\"WalletAuth\"] = \"wallet-auth\";\n  Command2[\"SendTransaction\"] = \"send-transaction\";\n  Command2[\"SignMessage\"] = \"sign-message\";\n  Command2[\"SignTypedData\"] = \"sign-typed-data\";\n  Command2[\"ShareContacts\"] = \"share-contacts\";\n  Command2[\"RequestPermission\"] = \"request-permission\";\n  Command2[\"GetPermissions\"] = \"get-permissions\";\n  Command2[\"SendHapticFeedback\"] = \"send-haptic-feedback\";\n  return Command2;\n})(Command || {});\nvar Permission = /* @__PURE__ */ ((Permission2) => {\n  Permission2[\"Notifications\"] = \"notifications\";\n  Permission2[\"Contacts\"] = \"contacts\";\n  return Permission2;\n})(Permission || {});\n\n// types/errors.ts\n\n\nvar VerificationErrorMessage = {\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.VerificationRejected]: \"You've cancelled the request in World App.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MaxVerificationsReached]: \"You have already verified the maximum number of times for this action.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.CredentialUnavailable]: \"It seems you do not have the verification level required by this app.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MalformedRequest]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InvalidNetwork]: \"Invalid network. If you are the app owner, visit docs.worldcoin.org/test for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofFailed]: \"There was an issue fetching your credential. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofPending]: \"Your identity is still being registered. Please wait a few minutes and try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.UnexpectedResponse]: \"Unexpected response from your wallet. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.FailedByHostApp]: \"Verification failed by the app. Please contact the app owner for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.GenericError]: \"Something unexpected went wrong. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.ConnectionFailed]: \"Connection to your wallet failed. Please try again.\"\n};\nvar PaymentErrorCodes = /* @__PURE__ */ ((PaymentErrorCodes2) => {\n  PaymentErrorCodes2[\"InputError\"] = \"input_error\";\n  PaymentErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  PaymentErrorCodes2[\"PaymentRejected\"] = \"payment_rejected\";\n  PaymentErrorCodes2[\"InvalidReceiver\"] = \"invalid_receiver\";\n  PaymentErrorCodes2[\"InsufficientBalance\"] = \"insufficient_balance\";\n  PaymentErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  PaymentErrorCodes2[\"GenericError\"] = \"generic_error\";\n  PaymentErrorCodes2[\"UserBlocked\"] = \"user_blocked\";\n  return PaymentErrorCodes2;\n})(PaymentErrorCodes || {});\nvar PaymentErrorMessage = {\n  [\"input_error\" /* InputError */]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [\"user_rejected\" /* UserRejected */]: \"You have cancelled the payment in World App.\",\n  [\"payment_rejected\" /* PaymentRejected */]: \"You've cancelled the payment in World App.\",\n  [\"invalid_receiver\" /* InvalidReceiver */]: \"The receiver address is invalid. Please contact the app owner.\",\n  [\"insufficient_balance\" /* InsufficientBalance */]: \"You do not have enough balance to complete this transaction.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"user_blocked\" /* UserBlocked */]: \"User's region is blocked from making payments.\"\n};\nvar PaymentValidationErrors = /* @__PURE__ */ ((PaymentValidationErrors2) => {\n  PaymentValidationErrors2[\"MalformedRequest\"] = \"There was a problem with this request. Please try again or contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidTokenAddress\"] = \"The token address is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidAppId\"] = \"The app ID is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"DuplicateReference\"] = \"This reference ID already exists please generate a new one and try again.\";\n  return PaymentValidationErrors2;\n})(PaymentValidationErrors || {});\nvar WalletAuthErrorCodes = /* @__PURE__ */ ((WalletAuthErrorCodes2) => {\n  WalletAuthErrorCodes2[\"MalformedRequest\"] = \"malformed_request\";\n  WalletAuthErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  WalletAuthErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return WalletAuthErrorCodes2;\n})(WalletAuthErrorCodes || {});\nvar WalletAuthErrorMessage = {\n  [\"malformed_request\" /* MalformedRequest */]: \"Provided parameters in the request are invalid.\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SendTransactionErrorCodes = /* @__PURE__ */ ((SendTransactionErrorCodes2) => {\n  SendTransactionErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SendTransactionErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SendTransactionErrorCodes2[\"InputError\"] = \"input_error\";\n  SendTransactionErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SendTransactionErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  SendTransactionErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SendTransactionErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SendTransactionErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SendTransactionErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  SendTransactionErrorCodes2[\"DailyTxLimitReached\"] = \"daily_tx_limit_reached\";\n  SendTransactionErrorCodes2[\"PermittedAmountExceedsSlippage\"] = \"permitted_amount_exceeds_slippage\";\n  SendTransactionErrorCodes2[\"PermittedAmountNotFound\"] = \"permitted_amount_not_found\";\n  return SendTransactionErrorCodes2;\n})(SendTransactionErrorCodes || {});\nvar SendTransactionErrorMessage = {\n  [\"invalid_operation\" /* InvalidOperation */]: \"Transaction included an operation that was invalid\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"input_error\" /* InputError */]: \"Invalid payload.\",\n  [\"simulation_failed\" /* SimulationFailed */]: \"The transaction simulation failed.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again later.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"disallowed_operation\" /* DisallowedOperation */]: \"The operation requested is not allowed. Please refer to the docs.\",\n  [\"invalid_contract\" /* InvalidContract */]: \"The contract address is not allowed for your application. Please check your developer portal configurations\",\n  [\"malicious_operation\" /* MaliciousOperation */]: \"The operation requested is considered malicious.\",\n  [\"daily_tx_limit_reached\" /* DailyTxLimitReached */]: \"Daily transaction limit reached. Max 100 transactions per day. Wait until the next day.\",\n  [\"permitted_amount_exceeds_slippage\" /* PermittedAmountExceedsSlippage */]: \"Permitted amount exceeds slippage. You must spend at least 90% of the permitted amount.\",\n  [\"permitted_amount_not_found\" /* PermittedAmountNotFound */]: \"Permitted amount not found in permit2 payload.\"\n};\nvar SignMessageErrorCodes = /* @__PURE__ */ ((SignMessageErrorCodes2) => {\n  SignMessageErrorCodes2[\"InvalidMessage\"] = \"invalid_message\";\n  SignMessageErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignMessageErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return SignMessageErrorCodes2;\n})(SignMessageErrorCodes || {});\nvar SignMessageErrorMessage = {\n  [\"invalid_message\" /* InvalidMessage */]: \"Invalid message requested\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SignTypedDataErrorCodes = /* @__PURE__ */ ((SignTypedDataErrorCodes2) => {\n  SignTypedDataErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SignTypedDataErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignTypedDataErrorCodes2[\"InputError\"] = \"input_error\";\n  SignTypedDataErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SignTypedDataErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SignTypedDataErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SignTypedDataErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SignTypedDataErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  return SignTypedDataErrorCodes2;\n})(SignTypedDataErrorCodes || {});\nvar SignTypedDataErrorMessage = {\n  [\"invalid_operation\" /* InvalidOperation */]: \"Transaction included an operation that was invalid\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"input_error\" /* InputError */]: \"Invalid payload.\",\n  [\"simulation_failed\" /* SimulationFailed */]: \"The transaction simulation failed.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"disallowed_operation\" /* DisallowedOperation */]: \"The operation requested is not allowed. Please refer to the docs.\",\n  [\"invalid_contract\" /* InvalidContract */]: \"The contract address is not allowed for your application. Please check your developer portal configurations\",\n  [\"malicious_operation\" /* MaliciousOperation */]: \"The operation requested is considered malicious.\"\n};\nvar MiniKitInstallErrorCodes = /* @__PURE__ */ ((MiniKitInstallErrorCodes2) => {\n  MiniKitInstallErrorCodes2[\"Unknown\"] = \"unknown\";\n  MiniKitInstallErrorCodes2[\"AlreadyInstalled\"] = \"already_installed\";\n  MiniKitInstallErrorCodes2[\"OutsideOfWorldApp\"] = \"outside_of_worldapp\";\n  MiniKitInstallErrorCodes2[\"NotOnClient\"] = \"not_on_client\";\n  MiniKitInstallErrorCodes2[\"AppOutOfDate\"] = \"app_out_of_date\";\n  return MiniKitInstallErrorCodes2;\n})(MiniKitInstallErrorCodes || {});\nvar MiniKitInstallErrorMessage = {\n  [\"unknown\" /* Unknown */]: \"Failed to install MiniKit.\",\n  [\"already_installed\" /* AlreadyInstalled */]: \"MiniKit is already installed.\",\n  [\"outside_of_worldapp\" /* OutsideOfWorldApp */]: \"MiniApp launched outside of WorldApp.\",\n  [\"not_on_client\" /* NotOnClient */]: \"Window object is not available.\",\n  [\"app_out_of_date\" /* AppOutOfDate */]: \"WorldApp is out of date. Please update the app.\"\n};\nvar ShareContactsErrorCodes = /* @__PURE__ */ ((ShareContactsErrorCodes2) => {\n  ShareContactsErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  ShareContactsErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return ShareContactsErrorCodes2;\n})(ShareContactsErrorCodes || {});\nvar ShareContactsErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar RequestPermissionErrorCodes = /* @__PURE__ */ ((RequestPermissionErrorCodes2) => {\n  RequestPermissionErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  RequestPermissionErrorCodes2[\"GenericError\"] = \"generic_error\";\n  RequestPermissionErrorCodes2[\"AlreadyRequested\"] = \"already_requested\";\n  RequestPermissionErrorCodes2[\"PermissionDisabled\"] = \"permission_disabled\";\n  RequestPermissionErrorCodes2[\"AlreadyGranted\"] = \"already_granted\";\n  RequestPermissionErrorCodes2[\"UnsupportedPermission\"] = \"unsupported_permission\";\n  return RequestPermissionErrorCodes2;\n})(RequestPermissionErrorCodes || {});\nvar RequestPermissionErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User declined sharing contacts\",\n  [\"generic_error\" /* GenericError */]: \"Request failed for unknown reason.\",\n  [\"already_requested\" /* AlreadyRequested */]: \"User has already declined turning on notifications once\",\n  [\"permission_disabled\" /* PermissionDisabled */]: \"User does not have this permission enabled in World App\",\n  [\"already_granted\" /* AlreadyGranted */]: \"If the user has already granted this mini app permission\",\n  [\"unsupported_permission\" /* UnsupportedPermission */]: \"The permission requested is not supported by this mini app\"\n};\nvar GetPermissionsErrorCodes = /* @__PURE__ */ ((GetPermissionsErrorCodes2) => {\n  GetPermissionsErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return GetPermissionsErrorCodes2;\n})(GetPermissionsErrorCodes || {});\nvar GetPermissionsErrorMessage = {\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\"\n};\nvar SendHapticFeedbackErrorCodes = /* @__PURE__ */ ((SendHapticFeedbackErrorCodes2) => {\n  SendHapticFeedbackErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SendHapticFeedbackErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  return SendHapticFeedbackErrorCodes2;\n})(SendHapticFeedbackErrorCodes || {});\nvar SendHapticFeedbackErrorMessage = {\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\"\n};\n\n// helpers/send-webview-event.ts\nvar sendWebviewEvent = (payload) => {\n  if (window.webkit) {\n    window.webkit?.messageHandlers?.minikit?.postMessage?.(payload);\n  } else if (window.Android) {\n    window.Android.postMessage?.(JSON.stringify(payload));\n  }\n};\n\n// types/responses.ts\nvar ResponseEvent = /* @__PURE__ */ ((ResponseEvent2) => {\n  ResponseEvent2[\"MiniAppVerifyAction\"] = \"miniapp-verify-action\";\n  ResponseEvent2[\"MiniAppPayment\"] = \"miniapp-payment\";\n  ResponseEvent2[\"MiniAppWalletAuth\"] = \"miniapp-wallet-auth\";\n  ResponseEvent2[\"MiniAppSendTransaction\"] = \"miniapp-send-transaction\";\n  ResponseEvent2[\"MiniAppSignMessage\"] = \"miniapp-sign-message\";\n  ResponseEvent2[\"MiniAppSignTypedData\"] = \"miniapp-sign-typed-data\";\n  ResponseEvent2[\"MiniAppShareContacts\"] = \"miniapp-share-contacts\";\n  ResponseEvent2[\"MiniAppRequestPermission\"] = \"miniapp-request-permission\";\n  ResponseEvent2[\"MiniAppGetPermissions\"] = \"miniapp-get-permissions\";\n  ResponseEvent2[\"MiniAppSendHapticFeedback\"] = \"miniapp-send-haptic-feedback\";\n  return ResponseEvent2;\n})(ResponseEvent || {});\n\n// minikit.ts\nvar sendMiniKitEvent = (payload) => {\n  sendWebviewEvent(payload);\n};\nvar _MiniKit = class _MiniKit {\n  static sendInit() {\n    sendWebviewEvent({\n      command: \"init\",\n      payload: { version: this.MINIKIT_VERSION }\n    });\n  }\n  static subscribe(event, handler) {\n    if (event === \"miniapp-wallet-auth\" /* MiniAppWalletAuth */) {\n      const originalHandler = handler;\n      const wrappedHandler = (payload) => {\n        if (payload.status === \"success\") {\n          _MiniKit.walletAddress = payload.address;\n          _MiniKit.getUserByAddress(payload.address).then((user) => {\n            _MiniKit.user = user;\n          });\n        }\n        originalHandler(payload);\n      };\n      this.listeners[event] = wrappedHandler;\n    } else if (event === \"miniapp-verify-action\" /* MiniAppVerifyAction */) {\n      const originalHandler = handler;\n      const wrappedHandler = (payload) => {\n        if (payload.status === \"success\" && payload.verification_level === _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb) {\n          compressAndPadProof(payload.proof).then(\n            (compressedProof) => {\n              payload.proof = compressedProof;\n              originalHandler(payload);\n            }\n          );\n        } else {\n          originalHandler(payload);\n        }\n      };\n      this.listeners[event] = wrappedHandler;\n    } else {\n      this.listeners[event] = handler;\n    }\n  }\n  static unsubscribe(event) {\n    delete this.listeners[event];\n  }\n  static trigger(event, payload) {\n    if (!this.listeners[event]) {\n      console.error(`No handler for event ${event}`);\n      return;\n    }\n    this.listeners[event](payload);\n  }\n  static async awaitCommand(event, command, executor) {\n    return new Promise((resolve) => {\n      let commandPayload = null;\n      const handleAndUnsubscribe = (payload) => {\n        this.unsubscribe(event);\n        resolve({ commandPayload, finalPayload: payload });\n      };\n      this.subscribe(event, handleAndUnsubscribe);\n      commandPayload = executor();\n    });\n  }\n  static commandsValid(worldAppSupportedCommands) {\n    return Object.entries(this.miniKitCommandVersion).every(\n      ([minikitCommandName, version]) => {\n        const commandInput = worldAppSupportedCommands.find(\n          (command) => command.name === minikitCommandName\n        );\n        if (!commandInput) {\n          console.error(\n            `Command ${minikitCommandName} is not supported by the app. Try updating the app version`\n          );\n        } else {\n          _MiniKit.isCommandAvailable[minikitCommandName] = true;\n        }\n        return commandInput ? commandInput.supported_versions.includes(version) : false;\n      }\n    );\n  }\n  static install(appId) {\n    if (typeof window === \"undefined\" || Boolean(window.MiniKit)) {\n      return {\n        success: false,\n        errorCode: \"already_installed\" /* AlreadyInstalled */,\n        errorMessage: MiniKitInstallErrorMessage[\"already_installed\" /* AlreadyInstalled */]\n      };\n    }\n    if (!appId) {\n      console.warn(\"App ID not provided during install\");\n    } else {\n      _MiniKit.appId = appId;\n    }\n    if (!window.WorldApp) {\n      return {\n        success: false,\n        errorCode: \"outside_of_worldapp\" /* OutsideOfWorldApp */,\n        errorMessage: MiniKitInstallErrorMessage[\"outside_of_worldapp\" /* OutsideOfWorldApp */]\n      };\n    }\n    try {\n      window.MiniKit = _MiniKit;\n      this.sendInit();\n    } catch (error) {\n      console.error(\n        MiniKitInstallErrorMessage[\"unknown\" /* Unknown */],\n        error\n      );\n      return {\n        success: false,\n        errorCode: \"unknown\" /* Unknown */,\n        errorMessage: MiniKitInstallErrorMessage[\"unknown\" /* Unknown */]\n      };\n    }\n    if (!this.commandsValid(window.WorldApp.supported_commands)) {\n      return {\n        success: false,\n        errorCode: \"app_out_of_date\" /* AppOutOfDate */,\n        errorMessage: MiniKitInstallErrorMessage[\"app_out_of_date\" /* AppOutOfDate */]\n      };\n    }\n    return { success: true };\n  }\n  static isInstalled(debug) {\n    if (debug) console.log(\"MiniKit is alive!\");\n    const isInstalled = Boolean(window.MiniKit);\n    if (!isInstalled)\n      console.error(\n        \"MiniKit is not installed. Make sure you're running the application inside of World App\"\n      );\n    return isInstalled;\n  }\n};\n_MiniKit.MINIKIT_VERSION = 1;\n_MiniKit.miniKitCommandVersion = {\n  [\"verify\" /* Verify */]: 1,\n  [\"pay\" /* Pay */]: 1,\n  [\"wallet-auth\" /* WalletAuth */]: 1,\n  [\"send-transaction\" /* SendTransaction */]: 1,\n  [\"sign-message\" /* SignMessage */]: 1,\n  [\"sign-typed-data\" /* SignTypedData */]: 1,\n  [\"share-contacts\" /* ShareContacts */]: 1,\n  [\"request-permission\" /* RequestPermission */]: 1,\n  [\"get-permissions\" /* GetPermissions */]: 1,\n  [\"send-haptic-feedback\" /* SendHapticFeedback */]: 1\n};\n_MiniKit.isCommandAvailable = {\n  [\"verify\" /* Verify */]: false,\n  [\"pay\" /* Pay */]: false,\n  [\"wallet-auth\" /* WalletAuth */]: false,\n  [\"send-transaction\" /* SendTransaction */]: false,\n  [\"sign-message\" /* SignMessage */]: false,\n  [\"sign-typed-data\" /* SignTypedData */]: false,\n  [\"share-contacts\" /* ShareContacts */]: false,\n  [\"request-permission\" /* RequestPermission */]: false,\n  [\"get-permissions\" /* GetPermissions */]: false,\n  [\"send-haptic-feedback\" /* SendHapticFeedback */]: false\n};\n_MiniKit.listeners = {\n  [\"miniapp-verify-action\" /* MiniAppVerifyAction */]: () => {\n  },\n  [\"miniapp-payment\" /* MiniAppPayment */]: () => {\n  },\n  [\"miniapp-wallet-auth\" /* MiniAppWalletAuth */]: () => {\n  },\n  [\"miniapp-send-transaction\" /* MiniAppSendTransaction */]: () => {\n  },\n  [\"miniapp-sign-message\" /* MiniAppSignMessage */]: () => {\n  },\n  [\"miniapp-sign-typed-data\" /* MiniAppSignTypedData */]: () => {\n  },\n  [\"miniapp-share-contacts\" /* MiniAppShareContacts */]: () => {\n  },\n  [\"miniapp-request-permission\" /* MiniAppRequestPermission */]: () => {\n  },\n  [\"miniapp-get-permissions\" /* MiniAppGetPermissions */]: () => {\n  },\n  [\"miniapp-send-haptic-feedback\" /* MiniAppSendHapticFeedback */]: () => {\n  }\n};\n_MiniKit.appId = null;\n/**\n * @deprecated you should use MiniKit.user.walletAddress instead\n */\n_MiniKit.walletAddress = null;\n_MiniKit.user = null;\n_MiniKit.getUserByAddress = async (address) => {\n  const userProfile = await getUserProfile(address);\n  return {\n    walletAddress: address,\n    username: userProfile.username,\n    profilePictureUrl: userProfile.profilePictureUrl\n  };\n};\n_MiniKit.commands = {\n  verify: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"verify\" /* Verify */]) {\n      console.error(\n        \"'verify' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n    const eventPayload = {\n      action: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__.encodeAction)(payload.action),\n      signal: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__.generateSignal)(payload.signal).digest,\n      verification_level: payload.verification_level || _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb,\n      timestamp\n    };\n    sendMiniKitEvent({\n      command: \"verify\" /* Verify */,\n      version: _MiniKit.miniKitCommandVersion[\"verify\" /* Verify */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  pay: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"pay\" /* Pay */]) {\n      console.error(\n        \"'pay' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    if (!validatePaymentPayload(payload)) {\n      return null;\n    }\n    const network = \"worldchain\" /* WorldChain */;\n    const eventPayload = {\n      ...payload,\n      network\n    };\n    sendMiniKitEvent({\n      command: \"pay\" /* Pay */,\n      version: _MiniKit.miniKitCommandVersion[\"pay\" /* Pay */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  walletAuth: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"wallet-auth\" /* WalletAuth */]) {\n      console.error(\n        \"'walletAuth' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const validationResult = validateWalletAuthCommandInput(payload);\n    if (!validationResult.valid) {\n      console.error(\n        \"Failed to validate wallet auth input:\\n\\n -->\",\n        validationResult.message\n      );\n      return null;\n    }\n    let protocol = null;\n    try {\n      const currentUrl = new URL(window.location.href);\n      protocol = currentUrl.protocol.split(\":\")[0];\n    } catch (error) {\n      console.error(\"Failed to get current URL\", error);\n      return null;\n    }\n    const siweMessage = generateSiweMessage({\n      scheme: protocol,\n      domain: window.location.host,\n      statement: payload.statement ?? void 0,\n      uri: window.location.href,\n      version: 1,\n      chain_id: 480,\n      nonce: payload.nonce,\n      issued_at: (/* @__PURE__ */ new Date()).toISOString(),\n      expiration_time: payload.expirationTime?.toISOString() ?? void 0,\n      not_before: payload.notBefore?.toISOString() ?? void 0,\n      request_id: payload.requestId ?? void 0\n    });\n    const walletAuthPayload = { siweMessage };\n    sendMiniKitEvent({\n      command: \"wallet-auth\" /* WalletAuth */,\n      version: _MiniKit.miniKitCommandVersion[\"wallet-auth\" /* WalletAuth */],\n      payload: walletAuthPayload\n    });\n    return walletAuthPayload;\n  },\n  sendTransaction: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"send-transaction\" /* SendTransaction */]) {\n      console.error(\n        \"'sendTransaction' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const validatedPayload = validateSendTransactionPayload(payload);\n    sendMiniKitEvent({\n      command: \"send-transaction\" /* SendTransaction */,\n      version: _MiniKit.miniKitCommandVersion[\"send-transaction\" /* SendTransaction */],\n      payload: validatedPayload\n    });\n    return validatedPayload;\n  },\n  signMessage: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-message\" /* SignMessage */]) {\n      console.error(\n        \"'signMessage' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-message\" /* SignMessage */,\n      version: _MiniKit.miniKitCommandVersion[\"sign-message\" /* SignMessage */],\n      payload\n    });\n    return payload;\n  },\n  signTypedData: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'signTypedData' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-typed-data\" /* SignTypedData */,\n      version: _MiniKit.miniKitCommandVersion[\"sign-typed-data\" /* SignTypedData */],\n      payload\n    });\n    return payload;\n  },\n  shareContacts: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'shareContacts' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"share-contacts\" /* ShareContacts */,\n      version: _MiniKit.miniKitCommandVersion[\"share-contacts\" /* ShareContacts */],\n      payload\n    });\n    return payload;\n  },\n  requestPermission: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"request-permission\" /* RequestPermission */]) {\n      console.error(\n        \"'requestPermission' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"request-permission\" /* RequestPermission */,\n      version: _MiniKit.miniKitCommandVersion[\"request-permission\" /* RequestPermission */],\n      payload\n    });\n    return payload;\n  },\n  getPermissions: () => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"get-permissions\" /* GetPermissions */]) {\n      console.error(\n        \"'getPermissions' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"get-permissions\" /* GetPermissions */,\n      version: _MiniKit.miniKitCommandVersion[\"get-permissions\" /* GetPermissions */],\n      payload: {}\n    });\n    return {\n      status: \"sent\"\n    };\n  },\n  sendHapticFeedback: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"send-haptic-feedback\" /* SendHapticFeedback */]) {\n      console.error(\n        \"'sendHapticFeedback' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"send-haptic-feedback\" /* SendHapticFeedback */,\n      version: _MiniKit.miniKitCommandVersion[\"send-haptic-feedback\" /* SendHapticFeedback */],\n      payload\n    });\n    return payload;\n  }\n};\n/**\n * This object contains async versions of all the commands.\n * Instead of using event listeners, you can just `await` these.\n *\n * They return a standardized object\n *\n * commandPayload - object returned by the command function\n *\n * finalPayload - object returned by the event listener, or in other words, WorldApp response\n */\n_MiniKit.commandsAsync = {\n  verify: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-verify-action\" /* MiniAppVerifyAction */,\n          \"verify\" /* Verify */,\n          () => _MiniKit.commands.verify(payload)\n        );\n        if (response.finalPayload.status === \"success\" && response.finalPayload.verification_level === _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb) {\n          response.finalPayload.proof = await compressAndPadProof(\n            response.finalPayload.proof\n          );\n        }\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  pay: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-payment\" /* MiniAppPayment */,\n          \"pay\" /* Pay */,\n          () => _MiniKit.commands.pay(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  walletAuth: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-wallet-auth\" /* MiniAppWalletAuth */,\n          \"wallet-auth\" /* WalletAuth */,\n          () => _MiniKit.commands.walletAuth(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  sendTransaction: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-send-transaction\" /* MiniAppSendTransaction */,\n          \"send-transaction\" /* SendTransaction */,\n          () => _MiniKit.commands.sendTransaction(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signMessage: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-message\" /* MiniAppSignMessage */,\n          \"sign-message\" /* SignMessage */,\n          () => _MiniKit.commands.signMessage(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signTypedData: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-typed-data\" /* MiniAppSignTypedData */,\n          \"sign-typed-data\" /* SignTypedData */,\n          () => _MiniKit.commands.signTypedData(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  shareContacts: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-share-contacts\" /* MiniAppShareContacts */,\n          \"share-contacts\" /* ShareContacts */,\n          () => _MiniKit.commands.shareContacts(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  requestPermission: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-request-permission\" /* MiniAppRequestPermission */,\n          \"request-permission\" /* RequestPermission */,\n          () => _MiniKit.commands.requestPermission(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  getPermissions: async () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-get-permissions\" /* MiniAppGetPermissions */,\n          \"get-permissions\" /* GetPermissions */,\n          () => _MiniKit.commands.getPermissions()\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  sendHapticFeedback: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-send-haptic-feedback\" /* MiniAppSendHapticFeedback */,\n          \"send-haptic-feedback\" /* SendHapticFeedback */,\n          () => _MiniKit.commands.sendHapticFeedback(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n};\nvar MiniKit = _MiniKit;\n\n// index.ts\n\n\n\n// helpers/address-book/index.ts\n\n\nvar worldIdAddressBookContractAddress = \"0x57b930D551e677CC36e2fA036Ae2fe8FdaE0330D\";\nvar addressVerifiedUntilAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    name: \"addressVerifiedUntil\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar getIsUserVerified = async (walletAddress, rpcUrl) => {\n  const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_2__.createPublicClient)({\n    chain: viem_chains__WEBPACK_IMPORTED_MODULE_3__.worldchain,\n    transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.http)(\n      rpcUrl || \"https://worldchain-mainnet.g.alchemy.com/public\"\n    )\n  });\n  try {\n    const verifiedUntilResponse = await publicClient.readContract({\n      address: worldIdAddressBookContractAddress,\n      abi: addressVerifiedUntilAbi,\n      functionName: \"addressVerifiedUntil\",\n      args: [walletAddress]\n    });\n    const verifiedUntil = Number(verifiedUntilResponse.toString());\n    if (!Number.isFinite(verifiedUntil)) {\n      console.warn(\"Invalid verifiedUntil value:\", verifiedUntil);\n      return false;\n    }\n    const currentTime = Math.floor(Date.now() / 1e3);\n    return verifiedUntil > currentTime;\n  } catch (error) {\n    console.error(\"Error verifying user:\", error);\n    return false;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/minikit-js/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/minikit-react/build/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@worldcoin/minikit-react/build/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UsernameSearch: () => (/* binding */ UsernameSearch),\n/* harmony export */   useIsUserVerified: () => (/* binding */ useIsUserVerified),\n/* harmony export */   useWaitForTransactionReceipt: () => (/* binding */ useWaitForTransactionReceipt)\n/* harmony export */ });\n/* harmony import */ var _worldcoin_minikit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @worldcoin/minikit-js */ \"(ssr)/./node_modules/@worldcoin/minikit-js/build/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n// src/address-book/is-verified.tsx\n\n\nvar useIsUserVerified = (walletAddress, rpcUrl) => {\n  const [isUserVerified, setIsUserVerified] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n  const [isError, setIsError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const fetchIsUserVerified = async () => {\n      try {\n        const data = await (0,_worldcoin_minikit_js__WEBPACK_IMPORTED_MODULE_0__.getIsUserVerified)(walletAddress);\n        setIsUserVerified(data);\n      } catch (err) {\n        setIsError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchIsUserVerified();\n  }, [walletAddress]);\n  return { isUserVerified, isLoading, isError };\n};\n\n// src/components/username-search.tsx\n\nvar createDebounce = () => {\n  let timeoutId;\n  return (fn, delay) => {\n    return (...args) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(() => {\n        fn(...args);\n      }, delay);\n    };\n  };\n};\nvar DEBOUNCE_DELAY_MS = 300;\nvar debounce = createDebounce();\nvar getSearchedUsername = async (username) => {\n  const response = await fetch(\n    `https://usernames.worldcoin.org/api/v1/search/${username}`\n  );\n  if (response.status === 200) {\n    const json = await response.json();\n    return { status: response.status, data: json };\n  }\n  return { status: response.status, error: \"Error fetching data\" };\n};\nvar UsernameSearch = ({\n  value,\n  handleChange,\n  setSearchedUsernames,\n  className,\n  inputProps\n}) => {\n  const debouncedSearch = debounce(\n    async (e) => {\n      const username = e.target.value;\n      const data = await getSearchedUsername(username);\n      setSearchedUsernames(data);\n    },\n    DEBOUNCE_DELAY_MS\n  );\n  const onChange = (e) => {\n    debouncedSearch(e);\n    handleChange(e);\n  };\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"input\",\n    {\n      type: \"text\",\n      value,\n      onChange,\n      className: className || \"rounded-md border-black border-2\",\n      ...inputProps\n    }\n  );\n};\n\n// src/transaction/hooks.ts\n\n\n// src/transaction/index.ts\nasync function fetchTransactionHash(appConfig, transactionId) {\n  try {\n    const response = await fetch(\n      `https://developer.worldcoin.org/api/v2/minikit/transaction/${transactionId}?app_id=${appConfig.app_id}&type=transaction`,\n      {\n        method: \"GET\"\n      }\n    );\n    console.log(\"Received response:\", response.url);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch transaction status\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(\"Error fetching transaction status\", error);\n    throw new Error(\"Failed to fetch transaction status\");\n  }\n}\n\n// src/transaction/hooks.ts\nfunction useWaitForTransactionReceipt(options) {\n  const {\n    client,\n    appConfig: _appConfig,\n    transactionId,\n    confirmations = 1,\n    timeout,\n    pollingInterval = 4e3\n  } = options;\n  const appConfig = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => _appConfig, [_appConfig]);\n  const [transactionHash, setTransactionHash] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(void 0);\n  const [receipt, setReceipt] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\n    void 0\n  );\n  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [isError, setIsError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(void 0);\n  const [pollCount, setPollCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n  const retrigger = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    reset();\n    setIsLoading(false);\n    setPollCount((count) => count + 1);\n  }, []);\n  const reset = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    setTransactionHash(void 0);\n    setReceipt(void 0);\n    setIsError(false);\n    setError(void 0);\n  }, []);\n  const fetchStatus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async () => {\n    return await fetchTransactionHash(appConfig, transactionId);\n  }, [appConfig, transactionId]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!transactionId) {\n      setIsLoading(false);\n      return;\n    }\n    reset();\n    setIsLoading(true);\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    let timeoutId = null;\n    const pollHash = async () => {\n      if (signal.aborted) return;\n      try {\n        const status = await fetchStatus();\n        if (signal.aborted) return;\n        if (!status.transactionHash) {\n          timeoutId = setTimeout(pollHash, pollingInterval);\n        } else if (status.transactionHash) {\n          setTransactionHash(status.transactionHash);\n          setIsLoading(false);\n        } else {\n          timeoutId = setTimeout(pollHash, pollingInterval);\n        }\n      } catch (err) {\n        if (signal.aborted) return;\n        setIsError(true);\n        setError(err instanceof Error ? err : new Error(String(err)));\n        setIsLoading(false);\n      }\n    };\n    pollHash();\n    return () => {\n      abortController.abort();\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [transactionId, pollCount]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!transactionHash) return;\n    if (receipt) return;\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    const fetchReceipt = async () => {\n      try {\n        const txnReceipt = await client.waitForTransactionReceipt({\n          hash: transactionHash,\n          confirmations,\n          timeout\n        });\n        if (signal.aborted) return;\n        setReceipt(txnReceipt);\n      } catch (err) {\n        if (signal.aborted) return;\n        setIsError(true);\n        setError(err instanceof Error ? err : new Error(String(err)));\n      }\n    };\n    fetchReceipt();\n    return () => {\n      abortController.abort();\n    };\n  }, [transactionHash, confirmations, timeout, client]);\n  const isSuccess = receipt !== void 0 && receipt.status === \"success\";\n  return {\n    transactionHash,\n    receipt,\n    isError,\n    isLoading,\n    isSuccess,\n    error,\n    retrigger\n  };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/minikit-react/build/index.js\n");

/***/ })

};
;